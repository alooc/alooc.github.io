import{_ as e,c as a,o as l,ag as s}from"./chunks/framework.DPDPlp3K.js";const k=JSON.parse('{"title":"MongoDB使用指南","description":"","frontmatter":{"title":"MongoDB使用指南","date":"2023年8月18日","categories":["数据库","NoSql","MongoDB"],"tags":["MongoDB"],"sidebar":"heading"},"headers":[],"relativePath":"notes/basics/database/nosql/mongodb/index.md","filePath":"notes/basics/database/nosql/mongodb/index.md"}'),i={name:"notes/basics/database/nosql/mongodb/index.md"};function n(d,t,o,r,h,p){return l(),a("div",null,t[0]||(t[0]=[s(`<h1 id="_1、简介" tabindex="-1">1、简介 <a class="header-anchor" href="#_1、简介" aria-label="Permalink to &quot;1、简介&quot;">​</a></h1><h2 id="_1-1、nosql简介" tabindex="-1">1.1、NoSQL简介 <a class="header-anchor" href="#_1-1、nosql简介" aria-label="Permalink to &quot;1.1、NoSQL简介&quot;">​</a></h2><blockquote><p>NoSQL，指的是非关系型的数据库。NoSQL有时也称作Not Only SQL的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。</p><p>NoSQL用于超大规模数据的存储。（例如谷歌或Facebook每天为他们的用户收集万亿比特的数据）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。</p></blockquote><p><code>NoSQL 数据库分类</code></p><table tabindex="0"><thead><tr><th>类型</th><th>部分代表</th><th>特点</th></tr></thead><tbody><tr><td>列存储</td><td>Hbase、Cassandra、Hypertable</td><td>顾名思义，是按列存储数据的。最大的特点是方便存储结构化和半结构化数据，方便做数据压缩，对针对某一列或者某几列的查询有非常大的IO优势。</td></tr><tr><td>文档存储</td><td>MongoDB、CouchDB</td><td>文档存储一般用类似json的格式存储，存储的内容是文档型的。这样也就有有机会对某些字段建立索引，实现关系数据库的某些功能。</td></tr><tr><td>key-value存储</td><td>Tokyo Cabinet / Tyrant、Berkeley DB、MemcacheDBRedis</td><td>可以通过key快速查询到其value。一般来说，存储不管value的格式，照单全收。（Redis包含了其他功能）</td></tr><tr><td>图存储</td><td>Neo4J、FlockDB</td><td>图形关系的最佳存储。使用传统关系数据库来解决的话性能低下，而且设计使用不方便。</td></tr><tr><td>对象存储</td><td>db4o、Versant</td><td>通过类似面向对象语言的语法操作数据库，通过对象的方式存取数据。</td></tr><tr><td>xml数据库</td><td>Berkeley DB XML、BaseX</td><td>高效的存储XML数据，并支持XML的内部查询语法，比如XQuery,Xpath。</td></tr></tbody></table><h2 id="_1-2、mongodb简介" tabindex="-1">1.2、MongoDB简介 <a class="header-anchor" href="#_1-2、mongodb简介" aria-label="Permalink to &quot;1.2、MongoDB简介&quot;">​</a></h2><blockquote><p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。</p><p>MongoDB 将数据存储为一个文档，数据结构由键值(key=&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p></blockquote><h2 id="_1-3、-mongodb概念解析" tabindex="-1">1.3、 MongoDB概念解析 <a class="header-anchor" href="#_1-3、-mongodb概念解析" aria-label="Permalink to &quot;1.3、 MongoDB概念解析&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">SQL术语/概念</th><th style="text-align:left;">MongoDB术语/概念</th><th style="text-align:left;">解释/说明</th></tr></thead><tbody><tr><td style="text-align:left;">database</td><td style="text-align:left;">database</td><td style="text-align:left;">数据库</td></tr><tr><td style="text-align:left;">table</td><td style="text-align:left;">collection</td><td style="text-align:left;">数据库表/集合</td></tr><tr><td style="text-align:left;">row</td><td style="text-align:left;">document</td><td style="text-align:left;">数据记录行/文档</td></tr><tr><td style="text-align:left;">column</td><td style="text-align:left;">field</td><td style="text-align:left;">数据字段/域</td></tr><tr><td style="text-align:left;">index</td><td style="text-align:left;">index</td><td style="text-align:left;">索引</td></tr><tr><td style="text-align:left;">table joins</td><td style="text-align:left;"></td><td style="text-align:left;">表连接,MongoDB不支持</td></tr><tr><td style="text-align:left;">primary key</td><td style="text-align:left;">primary key</td><td style="text-align:left;">主键,MongoDB自动将_id字段设置为主键</td></tr></tbody></table><p>下表为MongoDB中常用的几种数据类型。</p><table tabindex="0"><thead><tr><th style="text-align:left;">数据类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">String</td><td style="text-align:left;">字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。</td></tr><tr><td style="text-align:left;">Integer</td><td style="text-align:left;">整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。</td></tr><tr><td style="text-align:left;">Boolean</td><td style="text-align:left;">布尔值。用于存储布尔值（真/假）。</td></tr><tr><td style="text-align:left;">Double</td><td style="text-align:left;">双精度浮点值。用于存储浮点值。</td></tr><tr><td style="text-align:left;">Min/Max keys</td><td style="text-align:left;">将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。</td></tr><tr><td style="text-align:left;">Arrays</td><td style="text-align:left;">用于将数组或列表或多个值存储为一个键。</td></tr><tr><td style="text-align:left;">Timestamp</td><td style="text-align:left;">时间戳。记录文档修改或添加的具体时间。</td></tr><tr><td style="text-align:left;">Object</td><td style="text-align:left;">用于内嵌文档。</td></tr><tr><td style="text-align:left;">Null</td><td style="text-align:left;">用于创建空值。</td></tr><tr><td style="text-align:left;">Symbol</td><td style="text-align:left;">符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。</td></tr><tr><td style="text-align:left;">Date</td><td style="text-align:left;">日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。</td></tr><tr><td style="text-align:left;">Object ID</td><td style="text-align:left;">对象 ID。用于创建文档的 ID。</td></tr><tr><td style="text-align:left;">Binary Data</td><td style="text-align:left;">二进制数据。用于存储二进制数据。</td></tr><tr><td style="text-align:left;">Code</td><td style="text-align:left;">代码类型。用于在文档中存储 JavaScript 代码。</td></tr><tr><td style="text-align:left;">Regular expression</td><td style="text-align:left;">正则表达式类型。用于存储正则表达式。</td></tr></tbody></table><h1 id="_2、数据增删" tabindex="-1">2、数据增删 <a class="header-anchor" href="#_2、数据增删" aria-label="Permalink to &quot;2、数据增删&quot;">​</a></h1><h2 id="_2-1、创建数据库" tabindex="-1">2.1、创建数据库 <a class="header-anchor" href="#_2-1、创建数据库" aria-label="Permalink to &quot;2.1、创建数据库&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 切换数据库，数据库不存在时创建新的数据库</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mydb</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 查看所有数据库</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show dbs</span></span></code></pre></div><h2 id="_2-2、删除数据库" tabindex="-1">2.2、删除数据库 <a class="header-anchor" href="#_2-2、删除数据库" aria-label="Permalink to &quot;2.2、删除数据库&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 删除当前数据库</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dropDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 删除集合</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="_2-3、插入文档" tabindex="-1">2.3、插入文档 <a class="header-anchor" href="#_2-3、插入文档" aria-label="Permalink to &quot;2.3、插入文档&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mycollection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() # </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.2版本后弃用，使用insertOne() insertMany()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mycollection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">save</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="_2-4、更新文档" tabindex="-1">2.4、更新文档 <a class="header-anchor" href="#_2-4、更新文档" aria-label="Permalink to &quot;2.4、更新文档&quot;">​</a></h2><p><a href="https://www.runoob.com/mongodb/mongodb-update.html" target="_blank" rel="noreferrer">更新文档</a></p><h2 id="_2-5、删除文档" tabindex="-1">2.5、删除文档 <a class="header-anchor" href="#_2-5、删除文档" aria-label="Permalink to &quot;2.5、删除文档&quot;">​</a></h2><p><a href="https://www.runoob.com/mongodb/mongodb-remove.html" target="_blank" rel="noreferrer">删除文档</a></p><h2 id="_2-5、查询文档" tabindex="-1">2.5、查询文档 <a class="header-anchor" href="#_2-5、查询文档" aria-label="Permalink to &quot;2.5、查询文档&quot;">​</a></h2><p><a href="https://www.runoob.com/mongodb/mongodb-query.html" target="_blank" rel="noreferrer">查询文档</a></p><h1 id="_3、高级教程todo" tabindex="-1">3、高级教程todo <a class="header-anchor" href="#_3、高级教程todo" aria-label="Permalink to &quot;3、高级教程todo&quot;">​</a></h1>`,25)]))}const y=e(i,[["render",n]]);export{k as __pageData,y as default};
