import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{o as b,c as a,b as p}from"./app-64e721bb.js";const e={},t=p("<p>一、java语言概述<br> Java先编译后解释<br> JVM细节：指令集，寄存器，类文件的格式，栈，垃圾回收堆，存储区</p><p>二、理解面向对象<br> 继承<br> 封装<br> 多态<br> 任何简单或复杂的算法都可以由顺序结构、选择结构和循环结构这三种基本的结构组合生成<br> UML的使用<br> 在Java语言中，除8个基本数据值之外，一切都是对象，而对象就是面向对象程序设计的中心</p><p>三、数据类型和运算符<br> 直接量<br> 算术运算符<br> 复制运算符<br> 比较运算符<br> 逻辑运算符<br> 位运算符<br> 类型相关运算符</p><p>四、流程控制与数组<br> 数组：<br> int[] a=new int[n];<br> int[] a={};<br> a[i];<br> a.length;<br> foreach循环(遍历数组和集合更加简洁)：<br> for(type variableName:array|collection){<br> //variableName自动迭代访问每个元素<br> }</p><p>五、六、面向对象<br> 初始化块是构造器的补充，总在其执行之前执行。<br> 初始化块不能接收任何参数<br> 基本用法：<br> 如果有一段初始化处理代码对所有对象完全相同，<br> 且无需接收任何参数，就可以把这段初始化处理代码提取<br> 到初始化块中<br> 静态初始化块也称为类初始化块<br> toString是一个“自我描述”的方法。返回该对象实现类的“类名+@+hashcode”值<br> 内部类<br> 匿名内部类<br> lambda表达式的作用就是代替匿名内部类的繁琐语法，用来创建只有一个抽象方法的接口（函数式接口）的实例。<br> 枚举类</p><p>七、Java基础类库<br> 熟练掌握</p><p>八、Java集合</p><p>九、泛型</p><p>十、异常处理</p><p>十一、十二、AWT Swing编程</p><p>十三、MYSQL数据库与JDBC编程<br> 数据库连接池的解决方案：<br> 当应用程序启动时，系统主动建立足够的数据库连接，并将这些连接组成一个连接池。<br> 每次应用程序请求数据库连接时，无需重新打开连接，而是从连接池中取出已有的连接<br> 使用，使用完后不再关闭数据库连接，而是直接将连接归还给连接池。通过使用连接池<br> ，将大大提高程序的运行效率。<br> C3P0数据源</p><p>十四、注解Annotation</p><p>​</p><p>​</p>",14),o=[t];function _(n,c){return b(),a("div",null,o)}const s=r(e,[["render",_],["__file","学习笔记《疯狂Java讲义》.html.vue"]]);export{s as default};
