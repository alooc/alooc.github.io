import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,d as a,e as t,b as e}from"./app-ce74b944.js";const r={},o=a("p",null,"ajax [javascript xmlhttprequest xml,html,json]",-1),m=a("p",null,"一、Ajax",-1),p=a("p",null,[t("jquery对ajax多了大量的封装"),a("br"),t(" jquery使用三层封装："),a("br"),t(" 最低层封装方法为:$.ajax()"),a("br"),t(" 封装最底层实现了第二层的三种方法："),a("br"),t(" .load()"),a("br"),t(" $.get()"),a("br"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",{mathvariant:"normal"},"."),a("mi",null,"p"),a("mi",null,"o"),a("mi",null,"s"),a("mi",null,"t"),a("mo",{stretchy:"false"},"("),a("mo",{stretchy:"false"},")"),a("mtext",null,"最高层是：")]),a("annotation",{encoding:"application/x-tex"},".post() 最高层是：")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord"},"."),a("span",{class:"mord mathnormal"},"p"),a("span",{class:"mord mathnormal"},"os"),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mopen"},"("),a("span",{class:"mclose"},")"),a("span",{class:"mord cjk_fallback"},"最高层是：")])])]),t(".getScript() 和 $.getJSON()")],-1),c=a("p",null,[t("局部方法：需要一个包含元素的jquery对象作为前缀 .load() 适合做静态文件的异步获取"),a("br"),t(" 全局方法：无须指定某个元素 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",{mathvariant:"normal"},"."),a("mi",null,"g"),a("mi",null,"e"),a("mi",null,"t"),a("mo",{stretchy:"false"},"("),a("mo",{stretchy:"false"},")"),a("mtext",null,"和")]),a("annotation",{encoding:"application/x-tex"},".get()和")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord"},"."),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),a("span",{class:"mord mathnormal"},"e"),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mopen"},"("),a("span",{class:"mclose"},")"),a("span",{class:"mord cjk_fallback"},"和")])])]),t(".post() 适合传递参数到服务器页面")],-1),i=a("ol",null,[a("li",null,[a("p",null,[t("load方法："),a("br"),t(" .load(url,[data],[callback])"),a("br"),t(" 概括："),a("br"),t(" url:必须，请求html文件的url地址，参数类型为String"),a("br"),t(" data:可选，发送的key/value数据，参数类型为Object"),a("br"),t(" callback:可选，成功或失败的回调函数，参数类型为Function"),a("br"),t(" 详解："),a("br"),t(" url:"),a("br"),t(" 1.异步载入html内容"),a("br"),t(' $("#id").load("test.html")'),a("br"),t(" 对载入的html进行筛选，在url参数跟一个选择器"),a("br"),t(' $("#id").load("test.html .my") 选择器是test.html中的选择器'),a("br"),t(" 2.载入服务器文件，一般不仅需要载入数据，还要向服务器提交数据，此时用参数data"),a("br"),t(" 向服务器提交数据有两种方式：get 和 post"),a("br"),t(" ajax数据载入完毕后，就能执行回调函数callback，"),a("br"),t(" 回调函数可以传递三个可选参数："),a("br"),t(" responseText（请求返回）"),a("br"),t(" textStatus（请求状态）"),a("br"),t(" XMLHttpRequest（XMLHttpRequest对象）")])]),a("li",null,[a("p",null,[t("$.get():"),a("br"),t(" $.get(url,[data],[callback],[type])"),a("br"),t(" 概括："),a("br"),t(" type，服务器返回的内容格式：包括xml,html,script,json,text"),a("br"),t(" 详解："),a("br"),t(" 一般情况下type是智能判断的，不需要主动设置")])]),a("li",null,[a("p",null,[t("$.post():"),a("br"),t(" 使用和get方法基本一致"),a("br"),t(" 区别："),a("br"),t(" 1.get请求通过URL提交的，而post请求则是http消息实体提交的"),a("br"),t(" 2.get提交有大小限制（2KB）,而post方式不受限制"),a("br"),t(" 3.get方式会被缓存下来，可能有安全问题，而post没有这个问题")])]),a("li",null,[a("p",null,[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",{mathvariant:"normal"},"."),a("mi",null,"g"),a("mi",null,"e"),a("mi",null,"t"),a("mi",null,"S"),a("mi",null,"c"),a("mi",null,"r"),a("mi",null,"i"),a("mi",null,"p"),a("mi",null,"t"),a("mo",{stretchy:"false"},"("),a("mo",{stretchy:"false"},")"),a("mtext",null,"和")]),a("annotation",{encoding:"application/x-tex"},".getScript()和")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord"},"."),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),a("span",{class:"mord mathnormal"},"e"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"tS"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"cr"),a("span",{class:"mord mathnormal"},"i"),a("span",{class:"mord mathnormal"},"pt"),a("span",{class:"mopen"},"("),a("span",{class:"mclose"},")"),a("span",{class:"mord cjk_fallback"},"和")])])]),t(".getJSON():"),a("br"),t(" $.getScript()用于加载特定的js文件"),a("br"),t(" $.getJSON()用于专门加载json文件")])]),a("li",null,[a("p",null,[t("$.ajax():最底层的全局方法，完全可以单独实现上面的所有方法"),a("br"),t(" 只有一个参数，传递一个各个功能键值对的对象")]),a("p",null,[t("$.ajax()方法对象参数："),a("br"),t(" url: 发送请求的地址"),a("br"),t(" type: 请求方式"),a("br"),t(" data: 发送到服务器的数据，键值对字符串或对象"),a("br"),t(" success: 请求成功后调用的回调函数")])])],-1),u=e(`<p>表单序列化：<br> 使用表单序列化方法.serialize()，会智能的获取表单内的所有元素，这样，在面对大量的表单元素时，<br> 会把表单元素内容序列化为字符串，然后再使用Ajax请求</p><pre><code>$.ajaxSetup()   初始化ajax重复的属性

	$.ajaxSetup({
		type:&quot;POST&quot;,
		url:&quot;user.php&quot;,
		data:$(&quot;form&quot;).serialize()
	});
	$.(&quot;form&quot;).click(fucntion(){
		$.ajax(){
		success:function(response,status,xhr){
			$(&quot;#box&quot;) .html(response);
			}
			}
	);

在使用data属性传递的时候，如果是以对象形式传递键值对，可以使用$.param()方法将对象转换为字符串键值对格式
注意：使用$.param()将对象形式的键值对转为URL地址的字符串键值对，可以更加稳定准确的传递表单内容
</code></pre><p>二、Ajax进阶：</p><ol><li><p>全局请求事件：</p><p>1.加载请求：<br> .ajaxStart()和 .ajaxStop()<br> 请求开始时（未完成其他请求）激活.ajaxStart(),<br> 请求结束时（所有的请求都结束了）激活.ajaxStop()</p><pre><code> $(document).ajaxStart(function(){
 	$(&quot;.loading&quot;).show();
 }).ajaxStop(function(){
 	$(&quot;.loading&quot;).hide();
 });
 
 //如果请求时间太长，可以在ajax里设置超时
 timeout:2000,
 
 //如果某个ajax不想触发全局事件，可以设置取消
 global:false,
</code></pre><p>2.错误处理：<br> error:function(){}<br> 3.请求全局事件：<br> 全局事件方法：ajaxStart() ajaxStop() ajaxError() ajaxSuccess() ajaxComplete() ajaxSend()<br> 局部方法:error() success() complete()<br> 4.JSON和JSONP：<br> 同一域，只要设置dataType：‘json’ 即可加载JSON文件<br> 非同域，可以使用JSONP（json with padding），但也是有条件的<br> 5.jqXHR对象：<br> $.ajax()返回一个jqXHR对象<br> done() always() fail()代替success() complete() error()</p><pre><code> 使用jqXHR的连缀方式比$.ajax()的属性方式有三大好处：
 	1.可连缀操作      jqXHR.done(function(){alert(response);}).done(function(){alert(response););
 	2.可以多次执行同一个回调函数
 	3.为多个操作指定回调函数  $.when(jqxhr1,jqxhr2).done(function(r1,r2){});
</code></pre></li></ol><hr><p>全局事件方法时所有Ajax请求都会触发到，并且只能绑定到document上。而局部方法，只针对某个ajax</p><hr><p>​</p><p>​</p><p>​ <br> ​</p><p>​</p><p>​</p>`,12),h=[o,m,p,c,i,u];function d(b,x){return s(),n("div",null,h)}const _=l(r,[["render",d],["__file","jquery_ajax笔记.html.vue"]]);export{_ as default};
