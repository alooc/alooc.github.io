import{_ as s,c as i,o as t,ag as e}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"yaml语法","description":"","frontmatter":{"title":"yaml语法","date":"2020-01-01T09:02:55.000Z","categories":["后端技术","yaml"],"tags":["yaml"]},"headers":[],"relativePath":"notes/be/tech-stack/yaml/yaml语法.md","filePath":"notes/be/tech-stack/yaml/yaml语法.md"}'),n={name:"notes/be/tech-stack/yaml/yaml语法.md"};function l(p,a,h,r,k,o){return t(),i("div",null,a[0]||(a[0]=[e(`<blockquote><p>YAML设计目标是方便人们读写，它实质上是一种通用的数据串行化格式</p></blockquote><h6 id="_1-基本语法规则" tabindex="-1">1. 基本语法规则 <a class="header-anchor" href="#_1-基本语法规则" aria-label="Permalink to &quot;1. 基本语法规则&quot;">​</a></h6><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 大小写敏感</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 使用缩进表示层级关系</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 缩进时不允许使用Tab键，只允许使用空格</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</span></span></code></pre></div><h6 id="_2-支持3种数据结构" tabindex="-1">2. 支持3种数据结构 <a class="header-anchor" href="#_2-支持3种数据结构" aria-label="Permalink to &quot;2. 支持3种数据结构&quot;">​</a></h6><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 对象：键值对的集合</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 数组：一组按次序排列的值</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 纯量：单个的、不可再分的值</span></span></code></pre></div><p>​ 示例：<a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noreferrer">http://www.ruanyifeng.com/blog/2016/07/yaml.html</a></p>`,6)]))}const E=s(n,[["render",l]]);export{c as __pageData,E as default};
