import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as e,c,d as n,e as p,f as o,b as i}from"./app-ce74b944.js";const l={},u=i(`<h1 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> canvas</h1><p><code>canvas</code> 是 HTML5 的新特性，它允许我们使用 <code>canvas</code> 元素在网页上通过 JavaScript 绘制图像。</p><h2 id="canvas标签" tabindex="-1"><a class="header-anchor" href="#canvas标签" aria-hidden="true">#</a> canvas标签</h2><p><code>&lt;canvas&gt;</code> 标签只是图形容器，相当于一个画布，<code>canvas</code> 元素本身是没有绘图能力的。所有的绘制工作必须在 JavaScript 内部完成，相当于使用画笔在画布上画画。</p><p><strong>注意：必须指定宽高</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>charts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>800<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="getcontext" tabindex="-1"><a class="header-anchor" href="#getcontext" aria-hidden="true">#</a> getContext()</h2><p><code>context</code> 是一个封装了很多绘图功能的对象，我们在页面中创建一个 <code>canvas</code> 标签之后，首先要使用 <code>getContext()</code> 获取 <code>canvas</code> 的上下文环境，目前 <code>getContext()</code> 的参数只有 2d，暂时还不支持 3d</p><p><code>getContext(&quot;2d&quot;)</code> 对象是内建的 HTML5 对象，拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;charts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="绘制线段" tabindex="-1"><a class="header-anchor" href="#绘制线段" aria-hidden="true">#</a> 绘制线段</h2><ul><li><code>moveTo(x, y)</code>：把路径移动到画布中的指定点，不创建线条</li><li><code>lineTo(x, y)</code>：添加一个新点，然后在画布中创建从该点到最后指定点的线条</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">&#39;yellowgreen&#39;</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="绘制矩形" tabindex="-1"><a class="header-anchor" href="#绘制矩形" aria-hidden="true">#</a> 绘制矩形</h2><ul><li><code>fillRect(x, y, width, height)</code> 绘制填充颜色的矩形</li><li><code>strokeRect(x, y, width, height)</code> 绘制线条的矩形</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;pink&quot;</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">&quot;darkred&quot;</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">strokeRect</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="绘制圆形" tabindex="-1"><a class="header-anchor" href="#绘制圆形" aria-hidden="true">#</a> 绘制圆形</h2><ul><li><code>arc(x, y, radius, starAngle, endAngle, anticlockwise)</code><ul><li>x : 圆心的 x 坐标</li><li>y：圆心的 y 坐标</li><li>radius ： 半径</li><li>starAngle ：开始角度</li><li>endAngle：结束角度</li><li>anticlockwise ：是否逆时针（true）为逆时针，(false)为顺时针</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//不关闭路径路径会一直保留下去</span>
context<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&#39;rgba(0,255,0,0.25)&#39;</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 或</span>
<span class="token comment">// context.stroke(); // 此时就会有问题</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="清除路径" tabindex="-1"><a class="header-anchor" href="#清除路径" aria-hidden="true">#</a> 清除路径</h2><p>清除绘画的路径，多个图形就不会连接在一起</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="清除矩形区域" tabindex="-1"><a class="header-anchor" href="#清除矩形区域" aria-hidden="true">#</a> 清除矩形区域</h2><p>当在一个画布反复绘制图形，需要将上一次的图形清空</p><ul><li><code>clearRect(x, y, width, height)</code></li></ul><h2 id="绘制文字" tabindex="-1"><a class="header-anchor" href="#绘制文字" aria-hidden="true">#</a> 绘制文字</h2><ul><li><code>fillText(text, x, y, maxWidth)</code></li></ul><h2 id="案例-绘制一个柱状图" tabindex="-1"><a class="header-anchor" href="#案例-绘制一个柱状图" aria-hidden="true">#</a> 案例：绘制一个柱状图</h2><iframe src="https://book.youbaobao.xyz/datav-res/examples/test-echarts.html" width="100%" height="400"></iframe>`,29),r={class:"hint-container tip"},d=n("p",{class:"hint-container-title"},"提示",-1),k={href:"https://juejin.cn/post/6844903490020442125",target:"_blank",rel:"noopener noreferrer"};function v(h,m){const a=t("ExternalLinkIcon");return e(),c("div",null,[u,n("div",r,[d,n("p",null,[n("a",k,[p("一个少女心满满的例子带你入门 Canvas"),o(a)])])])])}const x=s(l,[["render",v],["__file","canvas.html.vue"]]);export{x as default};
