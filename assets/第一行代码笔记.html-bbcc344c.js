const t=JSON.parse(`{"key":"v-41f030d6","path":"/blog/old/beskill/android/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0.html","title":"第一行代码笔记","lang":"zh-CN","frontmatter":{"title":"第一行代码笔记","date":"2020-01-01T09:02:55.000Z","category":["后端技术","android"],"tag":["android"],"description":"1. \\tlog工具使用方便强大 \\t不要再使用system.out.println打印日志了， \\t注意Javaweb中的自动化测试 2. \\tActivity 包含用户界面的组件 \\t \\t使用intent连接活动之间的跳转和数据传输 \\t活动的声明周期，运行、暂停、停止、销毁 \\t\\t运行：在栈顶，正在操作 \\t\\t暂停：仍显示在界面中，但不是栈顶，不是正在操作的对象 \\t\\t停止：栈中存在，界面不存在 \\t\\t销毁：栈中没有 \\t\\tonCreate \\t\\tonRestart onStart \\t\\tonResume \\t\\tonPause \\t\\tonStop \\t\\tonDestory \\t活动的启动模式： \\t\\t标准启动，是默认的 \\t\\tsingleTop 该活动如果在栈顶的话，启动时，不再创建新的实例 ;但是，栈中已经存在，却不在栈顶，仍会创建一个新的实例 \\t\\tsingleTask 该活动再栈中存在，直接将它上面的栈中元素出栈，然后取出它，不会创建新的实例;但是，取出的活动，已经销毁了 \\t\\tsingleInstance 创建新的返回栈，共享返回栈 \\t \\t活动的最佳实践：\\t \\t\\t编程中有很多小技巧，使用这些技巧可以带来极大的便利 \\t\\t\\t继承的妙用 \\t\\t \\t\\t\\t可以写一个所有活动和器父类之间的中间类，用它来统一这些活动的行为 \\t\\t知晓当前的活动 \\t\\t随时随地退出程序 写一个管理活动类来管理，活动创建时添加，活动销毁时减少，并添加一个可以销毁全部活动的方法 \\t\\t启动活动的最佳写法，传递数据时单独写一个方法 3. \\t控件 \\t布局 \\tListView \\tRecycler 4. \\t碎片 \\t动态的增加碎片 \\t返回栈 \\t \\t代码域xml结合开发 \\tJava 的回调机制 \\t内容提供者 \\t服务 \\t网络 12 MaterialDesign \\tToolBar \\t滑动菜单 DrawerLayout \\t悬浮按钮 FloatingActionButton \\t交互式通知 Snackbar \\tCoordinatorLayout \\tCardView \\tAppBarLayout 解决标题栏被遮挡的问题 \\t下拉刷新 SwipeRefreshLayout \\t可折叠式标题栏 CollaspingToolbarLayout \\t系统工作栏透明 13 高级技巧 \\t1.自定义自己的Application类 \\t2.Intent传输对象 \\t3.定制自己的日志工具，在自定义类中控制log的打印等级 \\t4.调试Andriod程序 \\t5.创建定时任务 \\t6.多窗口模式编程 分屏 \\t7.Lambda表达式 \\t\\t \\timplementation 'de.hdodenhof:circleimageview:3.1.0' \\timplementation 'com.android.support:design:28.0.0' \\timplementation 'androidx.recyclerview:recyclerview:1.1.0' \\timplementation 'androidx.cardview:cardview:1.0.0' \\timplementation 'com.github.bumptech.glide:glide:4.5.0'\\t \\t annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0' \\timplementation 'org.litepal.android:java:3.0.0' \\timplementation 'com.squareup.okhttp3:okhttp:4.5.0' \\timplementation 'com.google.code.gson:gson:2.8.6'","head":[["meta",{"property":"og:url","content":"https://alooc.github.io/blog/old/beskill/android/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"Alooc"}],["meta",{"property":"og:title","content":"第一行代码笔记"}],["meta",{"property":"og:description","content":"1. \\tlog工具使用方便强大 \\t不要再使用system.out.println打印日志了， \\t注意Javaweb中的自动化测试 2. \\tActivity 包含用户界面的组件 \\t \\t使用intent连接活动之间的跳转和数据传输 \\t活动的声明周期，运行、暂停、停止、销毁 \\t\\t运行：在栈顶，正在操作 \\t\\t暂停：仍显示在界面中，但不是栈顶，不是正在操作的对象 \\t\\t停止：栈中存在，界面不存在 \\t\\t销毁：栈中没有 \\t\\tonCreate \\t\\tonRestart onStart \\t\\tonResume \\t\\tonPause \\t\\tonStop \\t\\tonDestory \\t活动的启动模式： \\t\\t标准启动，是默认的 \\t\\tsingleTop 该活动如果在栈顶的话，启动时，不再创建新的实例 ;但是，栈中已经存在，却不在栈顶，仍会创建一个新的实例 \\t\\tsingleTask 该活动再栈中存在，直接将它上面的栈中元素出栈，然后取出它，不会创建新的实例;但是，取出的活动，已经销毁了 \\t\\tsingleInstance 创建新的返回栈，共享返回栈 \\t \\t活动的最佳实践：\\t \\t\\t编程中有很多小技巧，使用这些技巧可以带来极大的便利 \\t\\t\\t继承的妙用 \\t\\t \\t\\t\\t可以写一个所有活动和器父类之间的中间类，用它来统一这些活动的行为 \\t\\t知晓当前的活动 \\t\\t随时随地退出程序 写一个管理活动类来管理，活动创建时添加，活动销毁时减少，并添加一个可以销毁全部活动的方法 \\t\\t启动活动的最佳写法，传递数据时单独写一个方法 3. \\t控件 \\t布局 \\tListView \\tRecycler 4. \\t碎片 \\t动态的增加碎片 \\t返回栈 \\t \\t代码域xml结合开发 \\tJava 的回调机制 \\t内容提供者 \\t服务 \\t网络 12 MaterialDesign \\tToolBar \\t滑动菜单 DrawerLayout \\t悬浮按钮 FloatingActionButton \\t交互式通知 Snackbar \\tCoordinatorLayout \\tCardView \\tAppBarLayout 解决标题栏被遮挡的问题 \\t下拉刷新 SwipeRefreshLayout \\t可折叠式标题栏 CollaspingToolbarLayout \\t系统工作栏透明 13 高级技巧 \\t1.自定义自己的Application类 \\t2.Intent传输对象 \\t3.定制自己的日志工具，在自定义类中控制log的打印等级 \\t4.调试Andriod程序 \\t5.创建定时任务 \\t6.多窗口模式编程 分屏 \\t7.Lambda表达式 \\t\\t \\timplementation 'de.hdodenhof:circleimageview:3.1.0' \\timplementation 'com.android.support:design:28.0.0' \\timplementation 'androidx.recyclerview:recyclerview:1.1.0' \\timplementation 'androidx.cardview:cardview:1.0.0' \\timplementation 'com.github.bumptech.glide:glide:4.5.0'\\t \\t annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0' \\timplementation 'org.litepal.android:java:3.0.0' \\timplementation 'com.squareup.okhttp3:okhttp:4.5.0' \\timplementation 'com.google.code.gson:gson:2.8.6'"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-22T01:58:54.000Z"}],["meta",{"property":"article:author","content":"Alooc"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:published_time","content":"2020-01-01T09:02:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-22T01:58:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第一行代码笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-01T09:02:55.000Z\\",\\"dateModified\\":\\"2024-04-22T01:58:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alooc\\",\\"url\\":\\"https://alooc.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1713751134000,"updatedTime":1713751134000,"contributors":[{"name":"dongzhaohe","email":"dongzhaohe@credamo.com","commits":1}]},"readingTime":{"minutes":2.06,"words":619},"filePathRelative":"blog/old/beskill/android/第一行代码笔记.md","localizedDate":"2020年1月1日","excerpt":"<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>1.\\n\\tlog工具使用方便强大\\n\\n\\t不要再使用system.out.println打印日志了，\\n\\t注意Javaweb中的自动化测试\\n\\n2.\\n\\tActivity 包含用户界面的组件\\n\\t\\n\\t使用intent连接活动之间的跳转和数据传输\\n\\t活动的声明周期，运行、暂停、停止、销毁\\n\\t\\t运行：在栈顶，正在操作\\n\\t\\t暂停：仍显示在界面中，但不是栈顶，不是正在操作的对象\\n\\t\\t停止：栈中存在，界面不存在\\n\\t\\t销毁：栈中没有\\n\\n\\t\\tonCreate\\n\\t\\tonRestart onStart\\n\\t\\tonResume\\n\\t\\tonPause\\n\\t\\tonStop    \\n\\t\\tonDestory\\n\\t活动的启动模式：\\n\\t\\t标准启动，是默认的\\n\\t\\tsingleTop  该活动如果在栈顶的话，启动时，不再创建新的实例 ;但是，栈中已经存在，却不在栈顶，仍会创建一个新的实例\\n\\t\\tsingleTask 该活动再栈中存在，直接将它上面的栈中元素出栈，然后取出它，不会创建新的实例;但是，取出的活动，已经销毁了\\n\\t\\tsingleInstance  创建新的返回栈，共享返回栈\\n\\t\\n\\t活动的最佳实践：\\t\\n\\t\\t编程中有很多小技巧，使用这些技巧可以带来极大的便利\\n\\t\\t\\t继承的妙用\\n\\t\\t\\n\\t\\t\\t可以写一个所有活动和器父类之间的中间类，用它来统一这些活动的行为\\n\\n\\t\\t知晓当前的活动\\n\\t\\t随时随地退出程序  写一个管理活动类来管理，活动创建时添加，活动销毁时减少，并添加一个可以销毁全部活动的方法\\n\\t\\t启动活动的最佳写法，传递数据时单独写一个方法\\n\\n3.\\n\\t控件\\n\\t布局\\n\\tListView\\n\\tRecycler\\n\\n4.\\n\\t碎片\\n\\t动态的增加碎片\\n\\t返回栈\\n\\t \\n\\t代码域xml结合开发\\n\\n\\n\\n\\n\\tJava 的回调机制\\n\\n\\n\\t内容提供者\\n\\t服务\\n\\t网络\\n\\n\\n12 MaterialDesign\\n\\tToolBar  \\n\\t滑动菜单 DrawerLayout\\n\\t悬浮按钮 FloatingActionButton\\n\\t交互式通知 Snackbar\\n\\n\\tCoordinatorLayout \\n\\tCardView\\n\\n\\tAppBarLayout  解决标题栏被遮挡的问题\\n\\n\\t下拉刷新 SwipeRefreshLayout\\n\\n\\t可折叠式标题栏 CollaspingToolbarLayout\\n\\n\\t系统工作栏透明\\n\\n13 高级技巧\\n\\n\\t1.自定义自己的Application类\\n\\n\\t2.Intent传输对象\\n\\n\\t3.定制自己的日志工具，在自定义类中控制log的打印等级\\n\\n\\t4.调试Andriod程序\\n\\n\\t5.创建定时任务\\n\\n\\t6.多窗口模式编程     分屏\\n\\n\\t7.Lambda表达式\\n\\t\\t\\n\\timplementation 'de.hdodenhof:circleimageview:3.1.0'\\n\\timplementation 'com.android.support:design:28.0.0'\\n\\n\\timplementation 'androidx.recyclerview:recyclerview:1.1.0'\\n\\n\\timplementation 'androidx.cardview:cardview:1.0.0'\\n\\n\\timplementation 'com.github.bumptech.glide:glide:4.5.0'\\t\\n\\t annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0'\\n\\n\\timplementation 'org.litepal.android:java:3.0.0'\\n\\n\\timplementation 'com.squareup.okhttp3:okhttp:4.5.0'\\n\\n\\timplementation 'com.google.code.gson:gson:2.8.6'\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};
