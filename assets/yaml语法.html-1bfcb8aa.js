import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as i,c as l,d as n,e,f as o,b as r}from"./app-e8d8d4c9.js";const c={},d=r(`<blockquote><p>YAML设计目标是方便人们读写，它实质上是一种通用的数据串行化格式</p></blockquote><h6 id="_1-基本语法规则" tabindex="-1"><a class="header-anchor" href="#_1-基本语法规则" aria-hidden="true">#</a> 1. 基本语法规则</h6><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token list punctuation">-</span> 大小写敏感
<span class="token list punctuation">-</span> 使用缩进表示层级关系
<span class="token list punctuation">-</span> 缩进时不允许使用Tab键，只允许使用空格
<span class="token list punctuation">-</span> 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2-支持3种数据结构" tabindex="-1"><a class="header-anchor" href="#_2-支持3种数据结构" aria-hidden="true">#</a> 2. 支持3种数据结构</h6><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token list punctuation">-</span> 对象：键值对的集合
<span class="token list punctuation">-</span> 数组：一组按次序排列的值
<span class="token list punctuation">-</span> 纯量：单个的、不可再分的值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),u={href:"http://www.ruanyifeng.com/blog/2016/07/yaml.html",target:"_blank",rel:"noopener noreferrer"};function p(m,v){const a=t("ExternalLinkIcon");return i(),l("div",null,[d,n("p",null,[e("​ 示例："),n("a",u,[e("http://www.ruanyifeng.com/blog/2016/07/yaml.html"),o(a)])])])}const b=s(c,[["render",p],["__file","yaml语法.html.vue"]]);export{b as default};
