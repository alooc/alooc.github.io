import{_ as s,c as a,o as l,ag as h}from"./chunks/framework.DPDPlp3K.js";const o=JSON.parse('{"title":"Mysql基础知识","description":"","frontmatter":{"title":"Mysql基础知识","date":"2020-01-01T09:02:55.000Z","categories":["数据库","Mysql"],"tags":["数据库","Mysql"],"sidebar":"heading"},"headers":[],"relativePath":"notes/basics/database/rdb/mysql/index.md","filePath":"notes/basics/database/rdb/mysql/index.md"}'),n={name:"notes/basics/database/rdb/mysql/index.md"};function t(e,i,p,k,r,d){return l(),a("div",null,i[0]||(i[0]=[h(`<h1 id="_1-mysql环境" tabindex="-1">1.Mysql环境 <a class="header-anchor" href="#_1-mysql环境" aria-label="Permalink to &quot;1.Mysql环境&quot;">​</a></h1><h2 id="主要的目录结构" tabindex="-1">主要的目录结构 <a class="header-anchor" href="#主要的目录结构" aria-label="Permalink to &quot;主要的目录结构&quot;">​</a></h2><h1 id="_2-基本的select语句" tabindex="-1">2. 基本的select语句 <a class="header-anchor" href="#_2-基本的select语句" aria-label="Permalink to &quot;2. 基本的select语句&quot;">​</a></h1><ul><li>sql的分类： <ul><li>DQL: select</li><li>DDL: create, drop, alter</li><li>DML: update, insert, delete</li><li>DCL: grant, revoke, commit, rollback, savepoint</li></ul></li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">....</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">....</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">or</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">having</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">....</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">order by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#方式1：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...,....,...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...,...,....</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 多表的连接条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 不包含组函数的过滤条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...,...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HAVING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 包含组函数的过滤条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ASC/DESC</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LIMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...,...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#方式2：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...,....,...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 多表的连接条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 不包含组函数的过滤条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AND/OR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 不包含组函数的过滤条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...,...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HAVING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 包含组函数的过滤条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ASC/DESC</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LIMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...,...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#其中：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：从哪些表中筛选</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：关联多表查询时，去除笛卡尔积</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：从表中筛选的条件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：分组依据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">having</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：在统计结果中再次筛选</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">order by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：排序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：分页</span></span></code></pre></div><ul><li><p>null 参与运算，运算结果都为null</p></li><li><p>自定义用到关键字需要家\`\`</p></li><li><p>执行顺序：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">having</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">distinct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">order by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">... </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div></li><li><p>sql执行原理：</p><ol><li>先执行from,若存在多表，则： <ol><li>求笛卡尔积，相当于得到虚拟表（virtual table) vt1-1</li><li>on筛选，在vt1-1基础上筛选，得到vt1-2</li><li>添加外部行(外连接的外部行),在vt1-2的基础上添加外部行，得到vt1-3</li><li>若操作两张以上的表，会重复以上步骤，知道所有表处理完。得到原始数据，最终表vt1</li></ol></li><li>where阶段，vt1筛选过滤，得到vt2</li><li>gruop by 和 having ,vt2进行分组和分组过滤 ，分别得到vt3、vt4</li><li>select distinct，筛选表中字段，distinct去掉重复行，得到vt5-1 vt5-2</li><li>order by ,提取想要的字段后，根据字段排序，得到vt6</li><li>limit，在vt6基础上，取出指定行的记录，得到最终结果，vt7</li></ol></li></ul><p>​</p><h1 id="_3-运算符" tabindex="-1">3. 运算符 <a class="header-anchor" href="#_3-运算符" aria-label="Permalink to &quot;3. 运算符&quot;">​</a></h1><h2 id="_1-算术运算符" tabindex="-1">1. 算术运算符 <a class="header-anchor" href="#_1-算术运算符" aria-label="Permalink to &quot;1. 算术运算符&quot;">​</a></h2><ul><li><ul><li></li></ul></li><li><ul><li></li></ul></li><li><ul><li></li></ul></li><li>/ 或 div</li><li>%或mod</li></ul><p><code>+只表示数值相加，如果遇到非数值类型，先尝试转成数值，如果转换失败，就按0计算</code></p><p><code>字符串拼接要使用字符串函数concat()实现</code></p><h2 id="_2-比较运算符" tabindex="-1">2. 比较运算符 <a class="header-anchor" href="#_2-比较运算符" aria-label="Permalink to &quot;2. 比较运算符&quot;">​</a></h2><ul><li><p>=</p></li><li><p>&lt;=&gt; 安全等于运算符，安全地判断两个值，字符串或表达式是否相等<code>可以对null进行判断，都为null返回1，只有一个为null返回0</code></p></li><li><p>&lt;&gt; 或 !=</p></li><li><p>&lt;</p></li><li><p>&lt;=</p></li><li><p><code>&gt;</code></p></li><li><p><code>&gt;=</code></p></li><li><p>非符号型运算符：</p><ul><li><p>is null</p></li><li><p>is not null</p></li><li><p>least</p></li><li><p>greatest</p></li><li><p>between and</p></li><li><p>isnull</p></li><li><p>in</p></li><li><p>not in</p></li><li><p>like</p></li><li><p>regexp</p></li><li><p>rlike</p></li></ul></li></ul><h2 id="_3-逻辑运算符" tabindex="-1">3. 逻辑运算符 <a class="header-anchor" href="#_3-逻辑运算符" aria-label="Permalink to &quot;3. 逻辑运算符&quot;">​</a></h2><ul><li>not !</li><li>and &amp;&amp;</li><li>or ||</li><li>xor</li></ul><h2 id="_4-位运算符" tabindex="-1">4. 位运算符 <a class="header-anchor" href="#_4-位运算符" aria-label="Permalink to &quot;4. 位运算符&quot;">​</a></h2><ul><li><p>&amp;</p></li><li><p>|</p></li><li><p>^</p></li><li><p>~</p></li><li><p><code>&gt;&gt;</code></p></li><li><p><code>&lt;&lt;</code></p></li></ul><h2 id="_5-运算符的优先级" tabindex="-1">5. 运算符的优先级 <a class="header-anchor" href="#_5-运算符的优先级" aria-label="Permalink to &quot;5. 运算符的优先级&quot;">​</a></h2><h2 id="_6-使用正则表达式查询" tabindex="-1">6. 使用正则表达式查询 <a class="header-anchor" href="#_6-使用正则表达式查询" aria-label="Permalink to &quot;6. 使用正则表达式查询&quot;">​</a></h2><p><code>正则表达式通常被用来检索或替换那些符合某个模式的文本内容，根据指定的匹配模式匹配文本中符合要求的特殊字符串。例如，从一个文本文件中提取电话号码，查找一篇文章中重复的单词或者替换用户输入的某些敏感词语等，这些地方都可以使用正则表达式。正则表达式强大而灵活，可以应用于非常复杂的查询。</code></p><h3 id="_1-查询以特定字符或字符串开头的记录" tabindex="-1">1. 查询以特定字符或字符串开头的记录 <a class="header-anchor" href="#_1-查询以特定字符或字符串开头的记录" aria-label="Permalink to &quot;1. 查询以特定字符或字符串开头的记录&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;^b&#39;</span></span></code></pre></div><h3 id="_2-查询以特定字符或字符串结尾的记录" tabindex="-1">2. 查询以特定字符或字符串结尾的记录 <a class="header-anchor" href="#_2-查询以特定字符或字符串结尾的记录" aria-label="Permalink to &quot;2. 查询以特定字符或字符串结尾的记录&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;b$&#39;</span></span></code></pre></div><h3 id="_3-用符号-来替代字符串中的任意一个字符" tabindex="-1">3. 用符号“.”来替代字符串中的任意一个字符 <a class="header-anchor" href="#_3-用符号-来替代字符串中的任意一个字符" aria-label="Permalink to &quot;3. 用符号“.”来替代字符串中的任意一个字符&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a.g&#39;</span></span></code></pre></div><h3 id="_4-使用-和-来匹配多个字符" tabindex="-1">4. 使用“*”和“+”来匹配多个字符 <a class="header-anchor" href="#_4-使用-和-来匹配多个字符" aria-label="Permalink to &quot;4. 使用“*”和“+”来匹配多个字符&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 以b开头且b后面出现a</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;^ba*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;^ba+&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="_5-匹配指定字符串" tabindex="-1">5. 匹配指定字符串 <a class="header-anchor" href="#_5-匹配指定字符串" aria-label="Permalink to &quot;5. 匹配指定字符串&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;on&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;on|ap&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="_6-匹配指定字符中的任意一个" tabindex="-1">6. 匹配指定字符中的任意一个 <a class="header-anchor" href="#_6-匹配指定字符中的任意一个" aria-label="Permalink to &quot;6. 匹配指定字符中的任意一个&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[abcd]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[123456]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="_7-匹配指定字符以外的字符" tabindex="-1">7. 匹配指定字符以外的字符 <a class="header-anchor" href="#_7-匹配指定字符以外的字符" aria-label="Permalink to &quot;7. 匹配指定字符以外的字符&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 包含字母a~e和数字1~2以外字符</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[^a-e1-2]&#39;</span></span></code></pre></div><h3 id="_8-使用-n-或-n-m-来指定字符串连续出现的次数" tabindex="-1">8. 使用{n,} 或 {n,m}来指定字符串连续出现的次数 <a class="header-anchor" href="#_8-使用-n-或-n-m-来指定字符串连续出现的次数" aria-label="Permalink to &quot;8. 使用{n,} 或 {n,m}来指定字符串连续出现的次数&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x{2,}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regexp </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ba{1,8}&#39;</span></span></code></pre></div><h1 id="_4-排序与分页" tabindex="-1">4. 排序与分页 <a class="header-anchor" href="#_4-排序与分页" aria-label="Permalink to &quot;4. 排序与分页&quot;">​</a></h1><ul><li><p>排序规则：</p><ul><li>desc 降序</li><li>asc 升序</li><li>多列排序：首先排序的第一列必须有相同的列值，才会对第二列进行排序。如果第一列数据中所有值都是唯一的，将不再对第二列进行排序</li></ul></li><li><p>分页：</p><ul><li><p>分页原理：</p><ul><li>所谓分页显示，就是将数据库中的结果集，一段一段显示出来需要的条件</li></ul></li><li><p>格式：limit [位置偏移量，] 行数</p></li><li><p>分页显示公式： （当前页数-1） * 每页条数，每页条数</p></li><li><p>使用limit的好处：</p></li></ul></li></ul><h1 id="_5-多表查询" tabindex="-1">5. 多表查询 <a class="header-anchor" href="#_5-多表查询" aria-label="Permalink to &quot;5. 多表查询&quot;">​</a></h1><ul><li><p>join on</p></li><li><p>left join on</p></li><li><p>right join on</p></li><li><p>union all</p></li></ul><h1 id="_6-函数" tabindex="-1">6. 函数 <a class="header-anchor" href="#_6-函数" aria-label="Permalink to &quot;6. 函数&quot;">​</a></h1><h2 id="单行函数" tabindex="-1">单行函数 <a class="header-anchor" href="#单行函数" aria-label="Permalink to &quot;单行函数&quot;">​</a></h2><h3 id="_1-数值函数" tabindex="-1">1. 数值函数 <a class="header-anchor" href="#_1-数值函数" aria-label="Permalink to &quot;1. 数值函数&quot;">​</a></h3><h3 id="_2-字符串函数" tabindex="-1">2. 字符串函数 <a class="header-anchor" href="#_2-字符串函数" aria-label="Permalink to &quot;2. 字符串函数&quot;">​</a></h3><h3 id="_3-日期和时间函数" tabindex="-1">3. 日期和时间函数 <a class="header-anchor" href="#_3-日期和时间函数" aria-label="Permalink to &quot;3. 日期和时间函数&quot;">​</a></h3><h4 id="_1-获取日期、时间" tabindex="-1">1. 获取日期、时间 <a class="header-anchor" href="#_1-获取日期、时间" aria-label="Permalink to &quot;1. 获取日期、时间&quot;">​</a></h4><h4 id="_2-日期与时间戳的转换" tabindex="-1">2. 日期与时间戳的转换 <a class="header-anchor" href="#_2-日期与时间戳的转换" aria-label="Permalink to &quot;2. 日期与时间戳的转换&quot;">​</a></h4><h4 id="_3-获取月份、星期、星期数、天数等函数" tabindex="-1">3. 获取月份、星期、星期数、天数等函数 <a class="header-anchor" href="#_3-获取月份、星期、星期数、天数等函数" aria-label="Permalink to &quot;3. 获取月份、星期、星期数、天数等函数&quot;">​</a></h4><h4 id="_4-日期的操作函数" tabindex="-1">4. 日期的操作函数 <a class="header-anchor" href="#_4-日期的操作函数" aria-label="Permalink to &quot;4. 日期的操作函数&quot;">​</a></h4><h4 id="_5-时间和秒钟转换的函数" tabindex="-1">5. 时间和秒钟转换的函数 <a class="header-anchor" href="#_5-时间和秒钟转换的函数" aria-label="Permalink to &quot;5. 时间和秒钟转换的函数&quot;">​</a></h4><h4 id="_6-计算日期和时间的函数" tabindex="-1">6. 计算日期和时间的函数 <a class="header-anchor" href="#_6-计算日期和时间的函数" aria-label="Permalink to &quot;6. 计算日期和时间的函数&quot;">​</a></h4><h4 id="_7-日期的格式化与解析" tabindex="-1">7. 日期的格式化与解析 <a class="header-anchor" href="#_7-日期的格式化与解析" aria-label="Permalink to &quot;7. 日期的格式化与解析&quot;">​</a></h4><h3 id="_4-流程控制函数" tabindex="-1">4. 流程控制函数 <a class="header-anchor" href="#_4-流程控制函数" aria-label="Permalink to &quot;4. 流程控制函数&quot;">​</a></h3><h3 id="_5-加密与解密函数" tabindex="-1">5. 加密与解密函数 <a class="header-anchor" href="#_5-加密与解密函数" aria-label="Permalink to &quot;5. 加密与解密函数&quot;">​</a></h3><h3 id="_6-mysql信息函数" tabindex="-1">6. MySQL信息函数 <a class="header-anchor" href="#_6-mysql信息函数" aria-label="Permalink to &quot;6. MySQL信息函数&quot;">​</a></h3><h3 id="_7-其他函数" tabindex="-1">7. 其他函数 <a class="header-anchor" href="#_7-其他函数" aria-label="Permalink to &quot;7. 其他函数&quot;">​</a></h3><h2 id="聚合函数" tabindex="-1">聚合函数 <a class="header-anchor" href="#聚合函数" aria-label="Permalink to &quot;聚合函数&quot;">​</a></h2><ul><li>avg</li><li>sum</li><li>min</li><li>max</li><li><h2 id="count" tabindex="-1">count <a class="header-anchor" href="#count" aria-label="Permalink to &quot;count&quot;">​</a></h2></li></ul><h1 id="_7-子查询" tabindex="-1">7. 子查询 <a class="header-anchor" href="#_7-子查询" aria-label="Permalink to &quot;7. 子查询&quot;">​</a></h1><ul><li>单行子查询</li><li>多行子查询</li><li>相关子查询</li></ul><h1 id="_8-创建和管理表" tabindex="-1">8. 创建和管理表 <a class="header-anchor" href="#_8-创建和管理表" aria-label="Permalink to &quot;8. 创建和管理表&quot;">​</a></h1><ul><li>创建和管理数据库 <ul><li>创建数据库 create database if not exists 数据库名</li><li>使用数据库 use 数据库名</li><li>修改数据库 alter database 数据库名 character set 字符集</li><li>删除数据库 drop database if exists 数据库名</li></ul></li><li>创建表 <ul><li>方式1</li><li>方式2</li><li>查看表结构 show create table 表名</li></ul></li><li>修改表 <ul><li>追加一个列 alter table 表名 add 字段名 字段类型</li><li>修改一个列 alter table 表名 modify 字段名 字段类型</li><li>重命名一个列 alter table 表名 change 旧字段名 新字段名 新数据类型</li><li>删除一个列 alter table 表名 drop 字段名</li></ul></li><li>重命名表 rename table 旧表名 to 新表名 或 alter table 表名 rename 新表名</li><li>删除表 drop table 表名</li><li>清空表 truncate table 表名</li></ul><h1 id="_9-数据处理之增删改" tabindex="-1">9. 数据处理之增删改 <a class="header-anchor" href="#_9-数据处理之增删改" aria-label="Permalink to &quot;9. 数据处理之增删改&quot;">​</a></h1><ul><li><p>插入数据</p></li><li><p>更新数据</p></li><li><p>删除数据</p></li></ul><h1 id="_10-数据类型" tabindex="-1">10. 数据类型 <a class="header-anchor" href="#_10-数据类型" aria-label="Permalink to &quot;10. 数据类型&quot;">​</a></h1><h1 id="_11-约束-视图" tabindex="-1">11. 约束，视图 <a class="header-anchor" href="#_11-约束-视图" aria-label="Permalink to &quot;11. 约束，视图&quot;">​</a></h1><ul><li><p>约束</p><ul><li>非空约束</li><li>唯一性约束</li><li>primary key 约束</li><li>auto_increment</li><li>foreign key 约束</li><li>check约束</li><li>default约束</li></ul></li><li><p>常见的数据库对象</p><ul><li></li><li><p>创建视图</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 视图名称</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 查询语句</span></span></code></pre></div></li><li><p>更新视图：</p><ul><li>一般情况：一对一时可以同步更新</li><li>不可更新视图： 使用了join 查询不可更新</li></ul></li><li><p>修改视图</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 视图名称</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">查询语句</span></span></code></pre></div></li><li><p>删除视图</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> view</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 视图名称</span></span></code></pre></div></li></ul></li></ul><h1 id="_12-存储过程和函数-变量、流程控制和游标-触发器" tabindex="-1">12. 存储过程和函数，变量、流程控制和游标，触发器 <a class="header-anchor" href="#_12-存储过程和函数-变量、流程控制和游标-触发器" aria-label="Permalink to &quot;12. 存储过程和函数，变量、流程控制和游标，触发器&quot;">​</a></h1><p><code>正常企业开发不会使用这些</code></p><h1 id="实操" tabindex="-1">实操 <a class="header-anchor" href="#实操" aria-label="Permalink to &quot;实操&quot;">​</a></h1><ul><li><a href="/notes/basics/database/rdb/mysql/example.html">mysql使用</a></li></ul>`,72)]))}const g=s(n,[["render",t]]);export{o as __pageData,g as default};
