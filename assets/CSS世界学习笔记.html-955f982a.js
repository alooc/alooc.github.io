import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,b as l}from"./app-6337abed.js";const d={},h=l(`<h1 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h1><h6 id="_1-在css的世界里-页面上的任何看似简单的呈现都是由许许多多css属性共同作用的结果" tabindex="-1"><a class="header-anchor" href="#_1-在css的世界里-页面上的任何看似简单的呈现都是由许许多多css属性共同作用的结果" aria-hidden="true">#</a> 1. <code>在css的世界里，页面上的任何看似简单的呈现都是由许许多多css属性共同作用的结果</code></h6><h6 id="_2-每个css属性在css世界中都是有其存在的原因的-都是和其他多个css属性发生着千丝万缕的关系的·" tabindex="-1"><a class="header-anchor" href="#_2-每个css属性在css世界中都是有其存在的原因的-都是和其他多个css属性发生着千丝万缕的关系的·" aria-hidden="true">#</a> 2. <code>每个css属性在css世界中都是有其存在的原因的，都是和其他多个css属性发生着千丝万缕的关系的· </code></h6><h6 id="_3-cascading-style-sheets" tabindex="-1"><a class="header-anchor" href="#_3-cascading-style-sheets" aria-hidden="true">#</a> 3. Cascading Style Sheets</h6><ul><li><p>CSS世界的诞生就是为图文信息展示服务的</p></li><li><p>流是css世界中的一种基本的定位和布局机制，可以理解为现实世界的一套物理规则。</p></li><li><p>css世界中的构建基石是HTML,HTML中最具代表性的两个基石是div 和 span (对应着水和木头)</p></li></ul><h6 id="_4-流对css的影响" tabindex="-1"><a class="header-anchor" href="#_4-流对css的影响" aria-hidden="true">#</a> 4. 流对css的影响：</h6><pre><code>- （1）擒贼先擒王
- （2）特殊布局与流的破坏
- （3）流向的改变  
</code></pre><h6 id="_5-流体布局-利用元素-流-的特性实现的各类布局效果" tabindex="-1"><a class="header-anchor" href="#_5-流体布局-利用元素-流-的特性实现的各类布局效果" aria-hidden="true">#</a> 5. 流体布局：利用元素&quot;流&quot;的特性实现的各类布局效果</h6><h6 id="_6-table-比css老-table有自己的世界" tabindex="-1"><a class="header-anchor" href="#_6-table-比css老-table有自己的世界" aria-hidden="true">#</a> 6. <code>&lt;table&gt;比CSS老，table有自己的世界</code></h6><h6 id="_7-css的新世界-css3" tabindex="-1"><a class="header-anchor" href="#_7-css的新世界-css3" aria-hidden="true">#</a> 7. css的新世界 CSS3</h6><p>​ CSS3的新属性：</p><p>​ （1） 布局更加丰富</p><pre><code>		- 移动端的崛起，催生了CSS3媒介查询以及许多响应式布局特性的出现，如图片元素的srcset属性、CSS的object-fit属性
		- 弹性盒子布局终于熬出了头（flexible box layout）
		- 格栅布局姗姗来迟（grid layout）
</code></pre><p>（2） 视觉表现长足进步</p><ul><li>圆角、阴影和渐变让元素更有质感</li><li>transform变换让元素有更多的可能</li><li>fliter滤镜和混合模式让web轻松变成在线PS</li><li>animation让动画变得非常简单</li></ul><p><code>CSS3设计的初衷是为了实现更丰富、更复杂的网页，所以基本上和“流”的关系并不大</code></p><h1 id="_2-需提前了解的术语和概念" tabindex="-1"><a class="header-anchor" href="#_2-需提前了解的术语和概念" aria-hidden="true">#</a> 2. 需提前了解的术语和概念</h1><h5 id="_1-关键术语" tabindex="-1"><a class="header-anchor" href="#_1-关键术语" aria-hidden="true">#</a> 1. 关键术语</h5><h6 id="_1-属性" tabindex="-1"><a class="header-anchor" href="#_1-属性" aria-hidden="true">#</a> 1. 属性</h6><h6 id="_2-值" tabindex="-1"><a class="header-anchor" href="#_2-值" aria-hidden="true">#</a> 2. 值</h6><p><code>值的常用类型：</code></p><pre><code>- 整数值
- 数值
- 百分比值
- 长度值
- 颜色值
- 字符串值
- 位置值等
</code></pre><h6 id="_3-关键字" tabindex="-1"><a class="header-anchor" href="#_3-关键字" aria-hidden="true">#</a> 3. 关键字</h6><h6 id="_4-变量" tabindex="-1"><a class="header-anchor" href="#_4-变量" aria-hidden="true">#</a> 4. 变量</h6><h6 id="_5-长度单位" tabindex="-1"><a class="header-anchor" href="#_5-长度单位" aria-hidden="true">#</a> 5. 长度单位</h6><ul><li>时间单位 s ms</li><li>角度单位 deg rad</li><li>长度单位 px em等</li></ul><p><code>细分长度单位：</code></p><ul><li>相对长度单位<br> - 相对字体长度单位 em ex rem ch<br> - 相对视区长度单位 vh vw vmin vmax<br> - 绝对长度单位 px pt cm mm pc</li></ul><h6 id="_6-功能符" tabindex="-1"><a class="header-anchor" href="#_6-功能符" aria-hidden="true">#</a> 6. 功能符</h6><p>​ <code>值以函数的形式存在</code></p><pre><code>- 表示颜色 rgba hsla
- 背景图片地址 url
- 元素属性值
- 计算 calc
- 过渡效果
</code></pre><h6 id="_7-属性值" tabindex="-1"><a class="header-anchor" href="#_7-属性值" aria-hidden="true">#</a> 7. 属性值</h6><p>​ <code>值+关键字+功能符</code></p><h6 id="_8-声明" tabindex="-1"><a class="header-anchor" href="#_8-声明" aria-hidden="true">#</a> 8. 声明</h6><p>​ <code>属性名加上属性值就是声明</code></p><h6 id="_9-声明块" tabindex="-1"><a class="header-anchor" href="#_9-声明块" aria-hidden="true">#</a> 9. 声明块</h6><p>​ <code>花括号包裹的一系列声明</code></p><h6 id="_10-规则或规则集" tabindex="-1"><a class="header-anchor" href="#_10-规则或规则集" aria-hidden="true">#</a> 10. 规则或规则集</h6><p>​ <code>选择器加声明块</code></p><h6 id="_11-选择器" tabindex="-1"><a class="header-anchor" href="#_11-选择器" aria-hidden="true">#</a> 11. 选择器</h6><ul><li>类选择器</li><li>ID选择器</li><li>属性选择器： 指含有[]的选择器。形如：[title]{} [title=&quot;css-world&quot;]{} [title~=&quot;css-world&quot;]{} [title^=&quot;css-world&quot;]{} [title$=&quot;css-world&quot;]{}</li><li>伪类选择器 前面有一个英文冒号:</li><li>伪元素选择器 有两个连续冒号的选择器</li></ul><h6 id="_12-关系选择器" tabindex="-1"><a class="header-anchor" href="#_12-关系选择器" aria-hidden="true">#</a> 12. 关系选择器</h6><p>​ <code>指根据与其他元素的关系选择元素的选择器，常见的符号有空格、&gt;、~、+</code></p><ul><li>后代选择器 空格连接 <code>所有后代元素</code></li><li>相邻后代选择器/子选择器 &gt; <code>儿子元素</code></li><li>兄弟选择器 ~ <code>当前元素后面的所有同级元素</code></li><li>相邻兄弟选择器 + <code>当前元素相邻的同级元素</code></li></ul><h6 id="_13-规则" tabindex="-1"><a class="header-anchor" href="#_13-规则" aria-hidden="true">#</a> 13. @规则</h6><p><code>@规则指的是以@字符开始的一些规则，像@media、@font-face、@page或者@support</code></p><h5 id="_2-了解css世界中的未定义行为" tabindex="-1"><a class="header-anchor" href="#_2-了解css世界中的未定义行为" aria-hidden="true">#</a> 2. 了解CSS世界中的未定义行为</h5><p><code>因浏览器不同导致BUG</code></p><h1 id="_3-流、元素与基本尺寸" tabindex="-1"><a class="header-anchor" href="#_3-流、元素与基本尺寸" aria-hidden="true">#</a> 3. 流、元素与基本尺寸</h1><ul><li>块级元素的基本特征：一个水平流上只能单独显示一个元素，多个块级元素则换行显示</li><li>这世界上任何事物，一旦限死了，就丧失了灵活性，其发展潜力及作用范围就会大大受限。</li></ul><p>元素的构造：</p><ul><li><ol><li>外在盒子： 负责元素是可以一行显示，还是只能换行显示</li></ol></li><li><ol start="2"><li>内在盒子：负责宽高、内容呈现等等</li></ol><ul><li>容器盒子 <ul><li>margin box <ul><li>border box</li><li>padding box</li><li>content box</li></ul></li></ul></li></ul></li></ul><p><code>display属性可以元素默认的盒模型：inline、block、inline-block</code></p><p>块级与内联的区别：</p><pre><code>- 块级（外部）盒子：block模型    可定义宽高、独占一行、多个换行
- 内联（外部）盒子：inline模型    不可定义宽高、多个一行显示
- 块级容器盒子（块级内部盒子）：inline-block模型    可定义宽高、独占一行、多个换行
</code></pre><h6 id="_1-块级元素" tabindex="-1"><a class="header-anchor" href="#_1-块级元素" aria-hidden="true">#</a> 1. 块级元素</h6><ol><li><p>width/height作用的具体细节</p><ol><li>width:auto 的4种不同的宽度表现： <ol><li>充分利用可用空间 100%于父级容器 fill-available 【外部尺寸】</li><li>收缩与包裹 shrink-to-fit 【内部尺寸】</li><li>收缩到最小 minimum content width 【内部尺寸】</li><li>超出容器限制 【内部尺寸】</li></ol></li></ol></li><li><p>流体特性</p><ol><li>外部尺寸与流体特性 <ol><li>正常流宽度：无宽度 原则</li><li>格式化宽度：仅出现在“绝对定位模型”，宽度大小相对于最近的具有定位特性的祖先元素计算的</li></ol></li><li>内部尺寸于流体特性 <ul><li>内部尺寸，简单来讲就是元素的尺寸由内部的元素决定，而非由外部的容器决定的。</li><li>表现形式 <ol><li>包裹性</li><li>首选最小宽度</li><li>最大宽度</li></ol></li></ul></li></ol></li><li><p>CSS流体布局下的宽度分离原则</p><p>宽度分离原则，就是css中的width属性不与padding/border属性共存。</p></li></ol><blockquote><ul><li>width、height</li><li>min、max</li><li>box-sizing</li><li>display</li><li>auto</li><li>relative</li><li>absolute</li><li>inline-block</li></ul></blockquote><h6 id="_2-内联元素" tabindex="-1"><a class="header-anchor" href="#_2-内联元素" aria-hidden="true">#</a> 2. 内联元素</h6><ol><li><p>哪些元素是内联元素</p><ol><li><p>从定义看</p><p>内联盒子的内联特指外在盒子</p></li><li><p>从表现看</p><p>内联元素的典型特征是可以和文字在一行显示。因此，文字、图片、按钮、输入框和下拉框等原生表单控件也是内联元素</p></li></ol></li><li><p>内联世界深入的基础——内联盒模型</p><ol><li>内容区域（content area）</li><li>内联盒子（inline box） <ol><li>内联盒子</li><li>匿名内联盒子</li></ol></li><li>行框盒子（line box）</li><li>包含盒子（containing box）</li></ol></li><li><p>幽灵空白节点</p><p>内联元素的所有解析和渲染表现就如同每个行框盒子的前面都有一个“空白节点”一样。</p><p>​ strut 支柱，是一个存在于每个行框盒子前面，同时具有该元素的字体和行高属性的0宽度的内联盒。</p></li></ol><h1 id="_4-盒尺寸四大家族" tabindex="-1"><a class="header-anchor" href="#_4-盒尺寸四大家族" aria-hidden="true">#</a> 4. 盒尺寸四大家族</h1><h1 id="_5-内联元素与流" tabindex="-1"><a class="header-anchor" href="#_5-内联元素与流" aria-hidden="true">#</a> 5. 内联元素与流</h1><h1 id="_6-流的破坏与保护" tabindex="-1"><a class="header-anchor" href="#_6-流的破坏与保护" aria-hidden="true">#</a> 6.流的破坏与保护</h1><h1 id="_7-css世界的层叠规则" tabindex="-1"><a class="header-anchor" href="#_7-css世界的层叠规则" aria-hidden="true">#</a> 7. CSS世界的层叠规则</h1><h1 id="_8-强大的文本处理能力" tabindex="-1"><a class="header-anchor" href="#_8-强大的文本处理能力" aria-hidden="true">#</a> 8. 强大的文本处理能力</h1><h1 id="_9-元素的装饰与美化" tabindex="-1"><a class="header-anchor" href="#_9-元素的装饰与美化" aria-hidden="true">#</a> 9. 元素的装饰与美化</h1><h1 id="_10-元素的显示与隐藏" tabindex="-1"><a class="header-anchor" href="#_10-元素的显示与隐藏" aria-hidden="true">#</a> 10. 元素的显示与隐藏</h1><h1 id="_11-用户界面样式" tabindex="-1"><a class="header-anchor" href="#_11-用户界面样式" aria-hidden="true">#</a> 11. 用户界面样式</h1><h1 id="_12-流向的改变" tabindex="-1"><a class="header-anchor" href="#_12-流向的改变" aria-hidden="true">#</a> 12. 流向的改变</h1>`,69),r=[h];function c(s,n){return a(),i("div",null,r)}const _=e(d,[["render",c],["__file","CSS世界学习笔记.html.vue"]]);export{_ as default};
