const e=JSON.parse('{"key":"v-02544884","path":"/blog/old/database/nosql/mongodb/mongodb.html","title":"MongoDB使用指南","lang":"zh-CN","frontmatter":{"title":"MongoDB使用指南","sidebar":"heading","category":["数据库","NoSql","MongoDB"],"tag":["MongoDB"],"description":"1、简介 1.1、NoSQL简介 NoSQL，指的是非关系型的数据库。NoSQL有时也称作Not Only SQL的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。 NoSQL用于超大规模数据的存储。（例如谷歌或Facebook每天为他们的用户收集万亿比特的数据）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。 NoSQL 数据库分类 类型 部分代表 特点 列存储 Hbase、Cassandra、Hypertable 顾名思义，是按列存储数据的。最大的特点是方便存储结构化和半结构化数据，方便做数据压缩，对针对某一列或者某几列的查询有非常大的IO优势。 文档存储 MongoDB、CouchDB 文档存储一般用类似json的格式存储，存储的内容是文档型的。这样也就有有机会对某些字段建立索引，实现关系数据库的某些功能。 key-value存储 Tokyo Cabinet / Tyrant、Berkeley DB、MemcacheDBRedis 可以通过key快速查询到其value。一般来说，存储不管value的格式，照单全收。（Redis包含了其他功能） 图存储 Neo4J、FlockDB 图形关系的最佳存储。使用传统关系数据库来解决的话性能低下，而且设计使用不方便。 对象存储 db4o、Versant 通过类似面向对象语言的语法操作数据库，通过对象的方式存取数据。 xml数据库 Berkeley DB XML、BaseX 高效的存储XML数据，并支持XML的内部查询语法，比如XQuery,Xpath。","head":[["meta",{"property":"og:url","content":"https://alooc.github.io/blog/old/database/nosql/mongodb/mongodb.html"}],["meta",{"property":"og:site_name","content":"Alooc"}],["meta",{"property":"og:title","content":"MongoDB使用指南"}],["meta",{"property":"og:description","content":"1、简介 1.1、NoSQL简介 NoSQL，指的是非关系型的数据库。NoSQL有时也称作Not Only SQL的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。 NoSQL用于超大规模数据的存储。（例如谷歌或Facebook每天为他们的用户收集万亿比特的数据）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。 NoSQL 数据库分类 类型 部分代表 特点 列存储 Hbase、Cassandra、Hypertable 顾名思义，是按列存储数据的。最大的特点是方便存储结构化和半结构化数据，方便做数据压缩，对针对某一列或者某几列的查询有非常大的IO优势。 文档存储 MongoDB、CouchDB 文档存储一般用类似json的格式存储，存储的内容是文档型的。这样也就有有机会对某些字段建立索引，实现关系数据库的某些功能。 key-value存储 Tokyo Cabinet / Tyrant、Berkeley DB、MemcacheDBRedis 可以通过key快速查询到其value。一般来说，存储不管value的格式，照单全收。（Redis包含了其他功能） 图存储 Neo4J、FlockDB 图形关系的最佳存储。使用传统关系数据库来解决的话性能低下，而且设计使用不方便。 对象存储 db4o、Versant 通过类似面向对象语言的语法操作数据库，通过对象的方式存取数据。 xml数据库 Berkeley DB XML、BaseX 高效的存储XML数据，并支持XML的内部查询语法，比如XQuery,Xpath。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-22T01:58:54.000Z"}],["meta",{"property":"article:author","content":"Alooc"}],["meta",{"property":"article:tag","content":"MongoDB"}],["meta",{"property":"article:modified_time","content":"2024-04-22T01:58:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MongoDB使用指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-22T01:58:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alooc\\",\\"url\\":\\"https://alooc.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1.1、NoSQL简介","slug":"_1-1、nosql简介","link":"#_1-1、nosql简介","children":[]},{"level":2,"title":"1.2、MongoDB简介","slug":"_1-2、mongodb简介","link":"#_1-2、mongodb简介","children":[]},{"level":2,"title":"1.3、 MongoDB概念解析","slug":"_1-3、-mongodb概念解析","link":"#_1-3、-mongodb概念解析","children":[]},{"level":2,"title":"2.1、创建数据库","slug":"_2-1、创建数据库","link":"#_2-1、创建数据库","children":[]},{"level":2,"title":"2.2、删除数据库","slug":"_2-2、删除数据库","link":"#_2-2、删除数据库","children":[]},{"level":2,"title":"2.3、插入文档","slug":"_2-3、插入文档","link":"#_2-3、插入文档","children":[]},{"level":2,"title":"2.4、更新文档","slug":"_2-4、更新文档","link":"#_2-4、更新文档","children":[]},{"level":2,"title":"2.5、删除文档","slug":"_2-5、删除文档","link":"#_2-5、删除文档","children":[]},{"level":2,"title":"2.5、查询文档","slug":"_2-5、查询文档","link":"#_2-5、查询文档","children":[]}],"git":{"createdTime":1713751134000,"updatedTime":1713751134000,"contributors":[{"name":"dongzhaohe","email":"dongzhaohe@credamo.com","commits":1}]},"readingTime":{"minutes":3.54,"words":1063},"filePathRelative":"blog/old/database/nosql/mongodb/mongodb.md","localizedDate":"2024年4月22日","excerpt":"<h1> 1、简介</h1>\\n<h2> 1.1、NoSQL简介</h2>\\n<blockquote>\\n<p>NoSQL，指的是非关系型的数据库。NoSQL有时也称作Not Only SQL的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。</p>\\n<p>NoSQL用于超大规模数据的存储。（例如谷歌或Facebook每天为他们的用户收集万亿比特的数据）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。</p>\\n</blockquote>\\n<p><code>NoSQL 数据库分类</code></p>\\n<table>\\n<thead>\\n<tr>\\n<th>类型</th>\\n<th>部分代表</th>\\n<th>特点</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>列存储</td>\\n<td>Hbase、Cassandra、Hypertable</td>\\n<td>顾名思义，是按列存储数据的。最大的特点是方便存储结构化和半结构化数据，方便做数据压缩，对针对某一列或者某几列的查询有非常大的IO优势。</td>\\n</tr>\\n<tr>\\n<td>文档存储</td>\\n<td>MongoDB、CouchDB</td>\\n<td>文档存储一般用类似json的格式存储，存储的内容是文档型的。这样也就有有机会对某些字段建立索引，实现关系数据库的某些功能。</td>\\n</tr>\\n<tr>\\n<td>key-value存储</td>\\n<td>Tokyo Cabinet / Tyrant、Berkeley DB、MemcacheDBRedis</td>\\n<td>可以通过key快速查询到其value。一般来说，存储不管value的格式，照单全收。（Redis包含了其他功能）</td>\\n</tr>\\n<tr>\\n<td>图存储</td>\\n<td>Neo4J、FlockDB</td>\\n<td>图形关系的最佳存储。使用传统关系数据库来解决的话性能低下，而且设计使用不方便。</td>\\n</tr>\\n<tr>\\n<td>对象存储</td>\\n<td>db4o、Versant</td>\\n<td>通过类似面向对象语言的语法操作数据库，通过对象的方式存取数据。</td>\\n</tr>\\n<tr>\\n<td>xml数据库</td>\\n<td>Berkeley DB XML、BaseX</td>\\n<td>高效的存储XML数据，并支持XML的内部查询语法，比如XQuery,Xpath。</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{e as data};
