const t=JSON.parse('{"key":"v-c3c11a36","path":"/blog/old/language/fe/JavaScript%E7%AC%94%E8%AE%B0.html","title":"JavaScript笔记","lang":"zh-CN","frontmatter":{"title":"JavaScript笔记","date":"2020-01-01T09:02:55.000Z","category":["编程语言","前端"],"tag":["JavaScript"],"description":"javascript高级编程 变量定义、流程控制、运算符 Javascript函数 不是面向对象的 有点像Java方法，但并不一样 在Java里，类是一等公民，类是可以独立存在的程序单元 在JavaScript里，函数是一等公民 函数永远是独立存在的！！！即使定义在一个类中也是独立存在的。（call） 定义函数的方法: \\t第一种： \\t\\tfunction 函数名(p1,p2){ \\t\\t\\t函数执行体 \\t\\t\\treturn ; \\t\\t\\t} \\t第二种：用function定义匿名函数 \\t\\tfunction (p1,p2){ \\t\\t\\t函数执行体 \\t\\t\\treturn ; \\t\\t\\t} \\t第三种：直接用function的构造器来创建函数 \\t\\tnew Function(p1,p2,p3,...,pn,\\"return ;\\") \\t\\t\\t语法繁琐之处在于，设置函数执行体时，参数很难传递。","head":[["meta",{"property":"og:url","content":"https://alooc.github.io/blog/old/language/fe/JavaScript%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"Alooc"}],["meta",{"property":"og:title","content":"JavaScript笔记"}],["meta",{"property":"og:description","content":"javascript高级编程 变量定义、流程控制、运算符 Javascript函数 不是面向对象的 有点像Java方法，但并不一样 在Java里，类是一等公民，类是可以独立存在的程序单元 在JavaScript里，函数是一等公民 函数永远是独立存在的！！！即使定义在一个类中也是独立存在的。（call） 定义函数的方法: \\t第一种： \\t\\tfunction 函数名(p1,p2){ \\t\\t\\t函数执行体 \\t\\t\\treturn ; \\t\\t\\t} \\t第二种：用function定义匿名函数 \\t\\tfunction (p1,p2){ \\t\\t\\t函数执行体 \\t\\t\\treturn ; \\t\\t\\t} \\t第三种：直接用function的构造器来创建函数 \\t\\tnew Function(p1,p2,p3,...,pn,\\"return ;\\") \\t\\t\\t语法繁琐之处在于，设置函数执行体时，参数很难传递。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-20T16:15:20.000Z"}],["meta",{"property":"article:author","content":"Alooc"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2020-01-01T09:02:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-20T16:15:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-01T09:02:55.000Z\\",\\"dateModified\\":\\"2024-09-20T16:15:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alooc\\",\\"url\\":\\"https://alooc.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1726848920000,"updatedTime":1726848920000,"contributors":[{"name":"alooc","email":"zbsx508@gmail.com","commits":1}]},"readingTime":{"minutes":6.27,"words":1880},"filePathRelative":"blog/old/language/fe/JavaScript笔记.md","localizedDate":"2020年1月1日","excerpt":"<p>javascript高级编程</p>\\n<p>变量定义、流程控制、运算符</p>\\n<p>Javascript函数<br>\\n不是面向对象的<br>\\n有点像Java方法，但并不一样</p>\\n<pre><code>在Java里，类是一等公民，类是可以独立存在的程序单元\\n在JavaScript里，函数是一等公民\\n函数永远是独立存在的！！！即使定义在一个类中也是独立存在的。（call）\\n\\n定义函数的方法:\\n\\t第一种：\\n\\t\\tfunction 函数名(p1,p2){\\n\\t\\t\\t函数执行体\\n\\t\\t\\treturn ;\\n\\t\\t\\t}\\n\\t第二种：用function定义匿名函数\\n\\t\\tfunction (p1,p2){\\n\\t\\t\\t函数执行体\\n\\t\\t\\treturn ;\\n\\t\\t\\t}\\n\\t第三种：直接用function的构造器来创建函数\\n\\t\\tnew Function(p1,p2,p3,...,pn,\\"return ;\\")\\n\\t\\t\\t语法繁琐之处在于，设置函数执行体时，参数很难传递。\\n</code></pre>","autoDesc":true}');export{t as data};
