import{_ as e,c as o,o as t,ag as r}from"./chunks/framework.DPDPlp3K.js";const b=JSON.parse('{"title":"SpringBoot源码分析","description":"","frontmatter":{"title":"SpringBoot源码分析","date":"2020-01-01T09:02:55.000Z","categories":["后端框架","SpringBoot"],"tags":"SpringBoot","sidebar":"heading"},"headers":[],"relativePath":"notes/be/frame/spring/springboot/source-analysis.md","filePath":"notes/be/frame/spring/springboot/source-analysis.md"}'),i={name:"notes/be/frame/spring/springboot/source-analysis.md"};function n(s,a,l,h,c,d){return t(),o("div",null,a[0]||(a[0]=[r('<h1 id="自动配置原理" tabindex="-1">自动配置原理 <a class="header-anchor" href="#自动配置原理" aria-label="Permalink to &quot;自动配置原理&quot;">​</a></h1><h2 id="启动类中有一个注解" tabindex="-1">启动类中有一个注解 <a class="header-anchor" href="#启动类中有一个注解" aria-label="Permalink to &quot;启动类中有一个注解&quot;">​</a></h2><h2 id="该注解源码" tabindex="-1">该注解源码： <a class="header-anchor" href="#该注解源码" aria-label="Permalink to &quot;该注解源码：&quot;">​</a></h2><h2 id="enableautoconfiguration" tabindex="-1">@EnableAutoConfiguration <a class="header-anchor" href="#enableautoconfiguration" aria-label="Permalink to &quot;@EnableAutoConfiguration&quot;">​</a></h2><h2 id="condition-使其可以按需加载组件" tabindex="-1">@Condition 使其可以按需加载组件 <a class="header-anchor" href="#condition-使其可以按需加载组件" aria-label="Permalink to &quot;@Condition 使其可以按需加载组件&quot;">​</a></h2><h1 id="静态资源配置原理" tabindex="-1">静态资源配置原理 <a class="header-anchor" href="#静态资源配置原理" aria-label="Permalink to &quot;静态资源配置原理&quot;">​</a></h1><h2 id="springmvc功能的自动配置类-webmvcautoconfiguration" tabindex="-1">SpringMVC功能的自动配置类 WebMvcAutoConfiguration <a class="header-anchor" href="#springmvc功能的自动配置类-webmvcautoconfiguration" aria-label="Permalink to &quot;SpringMVC功能的自动配置类 WebMvcAutoConfiguration&quot;">​</a></h2><h1 id="请求映射原理" tabindex="-1">请求映射原理 <a class="header-anchor" href="#请求映射原理" aria-label="Permalink to &quot;请求映射原理&quot;">​</a></h1><h1 id="参数处理原理" tabindex="-1">参数处理原理 <a class="header-anchor" href="#参数处理原理" aria-label="Permalink to &quot;参数处理原理&quot;">​</a></h1><h1 id="拦截器原理" tabindex="-1">拦截器原理 <a class="header-anchor" href="#拦截器原理" aria-label="Permalink to &quot;拦截器原理&quot;">​</a></h1><h1 id="原理解析" tabindex="-1">原理解析 <a class="header-anchor" href="#原理解析" aria-label="Permalink to &quot;原理解析&quot;">​</a></h1>',11)]))}const f=e(i,[["render",n]]);export{b as __pageData,f as default};
