import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o,c as i,d as n,e as s,f as p,b as a}from"./app-e8d8d4c9.js";const c={},r=a(`<blockquote><p>大纲</p></blockquote><p>​ 基础内容，<br> ​ 基础语法，MVVM模式，组件化<br> ​ 生命周期，动画特效<br> ​ 实战项目， <br> ​ 环境搭建，使用git，数据模拟，本地开发<br> ​ 联调，真机测试，上线<br> ​ 辅助：<br> ​ Axios,Vue Router,Vuex,异步组件,Stylus,递归组件,插件,公用组件<br> ​ 课程安排：<br> ​ 1.课程介绍<br> ​ 2.Vue初探<br> ​ 3-5.基础知识精讲<br> ​ 6-9.Vue项目实战<br> ​ 10.项目测试上线流程及后续学习指南<br> ​ 准备： <br> ​ .js<br> ​ ES6<br> ​ webpack<br> ​ npm<br> ​ 课程收获：<br> ​ 彻底入门Vue的使用<br> ​ 理解整个Vue项目的开发流程<br> ​ 移动端页面布局技巧<br> ​ 上手中型Vue项目的开发<br> ​ 规范的代码编写</p><h1 id="一、课程介绍" tabindex="-1"><a class="header-anchor" href="#一、课程介绍" aria-hidden="true">#</a> 一、课程介绍</h1><h1 id="二、vue起步" tabindex="-1"><a class="header-anchor" href="#二、vue起步" aria-hidden="true">#</a> 二、Vue起步</h1><ol><li>官方文档</li></ol><p><code>不操作dom，都是通过vue操作</code></p><ol start="2"><li><p>MVVM模式：</p></li><li><p>对比MVP模式:</p><p>M model 模型</p><p>V view 视图</p><p>P presenter 控制器</p></li><li><p>前端组件化</p><p>页面组成部分</p><p>将一个页面拆分成多个组件</p><ol><li><p>全局组件</p></li><li><p>局部组件，组件注册</p></li><li><p>组件间的传值</p><p>父组件 =&gt; 子组件：<code>v-bind v-bind:</code>子组件的属性=&#39;父组件的值&#39;</p><p>子组件 =&gt; 父组件：<code>$emit(&#39;自定义事件名&#39;，参数)</code></p></li></ol></li></ol><h1 id="三、vue基础精讲" tabindex="-1"><a class="header-anchor" href="#三、vue基础精讲" aria-hidden="true">#</a> 三、Vue基础精讲</h1><ol><li><p>Vue实例</p><p>组件的注册也是默认实例化</p><p>Vue 实例还暴露了一些有用的实例 property 与方法。它们都有前缀 <code>$</code>，以便与用户定义的 property 区分开来。</p></li><li><p>实例生命周期</p><p>生命周期函数就是vue实例在某一个时间点会自动执行的函数</p></li></ol><img src="https://cn.vuejs.org/images/lifecycle.png" alt="image-20210311094127380" style="zoom:25%;"><ol start="3"><li><p>模板语法</p><p><code>指令的职责是：当表达式的值改变时，将其产生的连带影响，响应式地作用于DOM</code></p><ol><li><p>取值</p><ol><li>插值表达式<code> {{ name }}</code></li><li><code>v-text=&quot;&quot; </code></li><li><code>v-html=&quot;&quot;</code></li></ol></li><li><p>绑定</p><ol><li><code>:class</code></li><li><code>:style</code></li></ol></li><li><p>事件</p><ol><li><code>@click</code></li></ol></li></ol></li><li><p>计算属性，方法和侦听器 <code>对于任何复杂逻辑，你都应当使用计算属性。</code></p><ol><li><p>计算属性：</p><p><code>computed: {}</code></p><p>会缓存旧数据，只有依赖的数据变化才会刷新缓存</p></li><li><p>方法实现：没有缓存机制</p></li><li><p>侦听器实现：有缓存机制，但代码多</p></li></ol></li><li><p>计算属性的setter和getter</p></li><li><p>vue中的样式绑定：</p><ol><li><p><code>:class=&quot;{}&quot; </code> class的对象绑定</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>:class=&quot;{css样式:boolean类型的判断参数}&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>:class=&quot;[]&quot; </code> class的数组绑定</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>:class=&quot;[存储css样式的变量]&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>使用 <code>:style</code> 对象或数组</p></li></ol></li><li><p>vue中的条件渲染</p><ol><li><code>v-if v-show v-else v-else-if</code></li><li>复用性高，不变的元素不会重新渲染，加key使之重新渲染</li></ol></li><li><p>列表渲染</p><p>使用key值可以提高性能，不要用index,使用item中的唯一标识性能会更高</p><p>操作数组只有使用vue定义的方法才会重新渲染页面：</p><pre><code> 1. push
 2. pop
 3. shift
 4. unshift
 5. splice
 6. sort
 7. reverse
</code></pre><p>或直接改变数组的引用 或 <code>Vue.set()</code>方法</p><p>template 模板占位符，不会被渲染到页面上</p><p>也可遍历对象，</p><pre><code> - 对象通过改变引用来重新渲染页面
 - Vue.set()方法
</code></pre></li></ol><h1 id="四、深入理解vue组件" tabindex="-1"><a class="header-anchor" href="#四、深入理解vue组件" aria-hidden="true">#</a> 四、深入理解Vue组件</h1><ol><li><p>使用组件的细节点</p><ol><li><code>is</code>间接使用组件 is=&quot;组件名&quot; table/select/ul 等中使用is</li><li><code>data</code>子组件中的data用函数表示，使每个子组件的实例都有独立的数据存储</li><li><code>ref</code>使用dom ref dom或子组件的引用</li></ol></li><li><p>父子组件的数据传递</p><ol><li>子组件不要修改父组件传过来的引用类型数据 通过data副本来修改</li></ol></li><li><p>组件参数校验与非props特性</p><ol><li><p>校验</p><div class="language-ja line-numbers-mode" data-ext="ja"><pre class="language-ja"><code>props: {
          content: {
              type: String,
              required: false,
              default: &#39;default value&#39;,
              // 校验器
              validator: function (value) {
                  return value.length&gt;5;
              }
          }
        },
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>非props特性</p><ol><li>未定义，子组件不能使用</li><li>dom标签中会展示</li></ol></li></ol></li><li><p>给组件绑定原生事件</p><p>子组件上绑定的事件都是自定义的事件，子组件模板里绑定的才是原生事件</p><p>加修饰符<code> .native</code> 可以绑定原生事件</p></li><li><p>非父子组件之间的传值</p><ol><li>官方框架 vuex</li><li>总线机制（Bus/总线/观察者模式/发布订阅模式）</li></ol></li><li><p>在Vue中使用插槽 <code>父组件向子组件优雅地传递dom结构</code></p><p>具名插槽</p></li><li><p>作用域插槽</p><p>循环遍历时，父组件自定义子组件展示的dom</p></li><li><p>动态组件和<code>v-once</code>指令</p><ol><li><p>动态组件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>组件名<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据is属性自动变换组件</p></li><li><p>v-once</p><p>只渲染元素和组件<strong>一次</strong>。随后的重新渲染，元素/组件及其所有的子节点将被视为静态内容并跳过。这可以用于优化更新性能。</p></li></ol></li></ol><h1 id="五、vue中的动画特效" tabindex="-1"><a class="header-anchor" href="#五、vue中的动画特效" aria-hidden="true">#</a> 五、Vue中的动画特效</h1><ol><li><p>css动画原理</p><p>动态地往标签中添加或删除class</p><p>使用transition标签包裹</p></li><li><p>使用Animate.css库</p></li><li><p>同时使用过渡和动画 设置时长问题</p></li><li><p>js动画与velocity.js的结合</p><p>transition标签存在事件</p><p>js钩子</p><p>velocity.js库</p></li><li><p>多个组件或元素的过渡</p><p>mode属性控制 in-out out-in</p></li><li><p>列表过渡</p><p>transition-group</p></li><li><p>动画封装</p></li></ol><h1 id="六、vue项目预热" tabindex="-1"><a class="header-anchor" href="#六、vue项目预热" aria-hidden="true">#</a> 六、Vue项目预热</h1>`,16),u=n("li",null,[n("p",null,"环境准备"),n("ol",null,[n("li",null,"node.js"),n("li",null,"vue-cli")])],-1),d=n("p",null,"项目结构",-1),k=a("<li>build 构建脚本目录 <ol><li>build.js 生产环境构建脚本</li><li>check-versions.js 版本检查（node,npm）</li><li>utils.js 构建相关工具方法</li><li>vue-loader.conf.js css加载器配置</li><li>webpack.base.conf.js webpack基础配置</li><li>webpack.dev.conf.js webpack开发环境配置</li><li>webpack.prod.conf.js webpack生产环境配置</li></ol></li><li>config 项目配置 <ol><li>dev.env.js 开发环境变量</li><li>index.js 项目配置文件</li><li>prod.env.js 生产环境变量</li><li>test.env.js 测试环境变量</li></ol></li><li>src 源码目录 <ol><li>assets 资源目录，这里的资源会被webpack构建</li><li>components 公共组件目录</li><li>router 前端路由 <ol><li>index.js</li></ol></li><li>App.vue 根组件</li><li>main.js 入口js文件</li></ol></li><li>static 纯静态资源，不会被webpack构建 <ol><li>.gitkeep</li></ol></li><li>test 测试文件目录</li><li>.babelrc babel编译参数</li><li>.editorconfig 代码格式</li><li>.esIintignore</li><li>.esIintrc.js</li><li>.gitignore git上传需要忽略的文件配置</li><li>.postcssrc.js 转换css的工具</li><li>index.html 入口页面</li><li>package.json npm包配置文件，里面定义了项目的npm脚本、依赖包等星系</li><li>package-lock.json</li>",14),v={href:"http://README.md",target:"_blank",rel:"noopener noreferrer"},m=a(`<li><p>单文件组件与Vue中的路由</p><ol><li><p>.vue 单文件组件</p><ol><li><p>组件的模板<code>&lt;template&gt;&lt;/template&gt;</code></p></li><li><p>组件的逻辑<code>&lt;script&gt;&lt;/script&gt;</code></p></li><li><p>组件的样式 <code>&lt;style&gt;&lt;/style&gt;</code></p></li></ol></li><li><p>路由就是根据网址的不同，返回不同的内容给用户</p><ol><li><code>&lt;router-view/&gt;</code>显示的是当前路由地址多对应的内容</li><li>@表示src目录</li></ol></li><li><p>单页应用vs多页应用</p><ol><li><p>多页面应用：</p><p>页面跳转=》返回HTML</p><pre><code> - 优点：首屏时间快，SEO效果好
 - 缺点：页面切换慢
</code></pre></li><li><p>单页面应用：</p><ul><li>优点：页面切换快</li><li>缺点：首屏时间稍慢，SEO差</li></ul></li></ol></li><li><p>项目初始化</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vue init webpack travel

reset.css  解决一像素边框的Border.css

<span class="token comment">#使用fastclick解决300ms点击延迟</span>
cnpm <span class="token function">install</span> fastclick <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li>`,1),b=n("h1",{id:"七、项目实战-旅游网站首页开发",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#七、项目实战-旅游网站首页开发","aria-hidden":"true"},"#"),s(" 七、项目实战 - 旅游网站首页开发")],-1),g=a(`<li><p>Stylus - 富有表现力的、动态的、健壮的CSS</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> cnpm <span class="token function">install</span> stylus <span class="token parameter variable">--save</span>
 cnpm <span class="token function">install</span> stylus-loader <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>iconfont的使用及代码优化</p><p>使用stylus</p><p>css中引用使用@import</p><p>可自定义别名</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>@ src js中的别名
<span class="token operator">~</span>@ src style中的别名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),h=n("p",null,"首页轮播图",-1),f={href:"https://github.com/surmon-china/vue-awesome-swiper",target:"_blank",rel:"noopener noreferrer"},y=n("div",{class:"language-css line-numbers-mode","data-ext":"css"},[n("pre",{class:"language-css"},[n("code",null,`stylus中使用>>>进行样式穿透，限制范围的css样式可在全局生效
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),_=a(`<li><p>首页图标区域页面布局</p></li><li><p>图标区域逻辑实现</p><p>使用计算属性组装二维数组</p><p>轮播效果</p></li><li><p>首页热销推荐组件开发</p><p>列表</p></li><li><p>首页开发周末游组件</p><p>列表</p></li><li><p>使用axios发送ajax请求</p><p>安装axios</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cnpm install axios <span class="token operator">--</span>save

axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

config<span class="token operator">/</span>index<span class="token punctuation">.</span>js 配置地址转发代理
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>首页父子组件间传值</p><p>父组件 ：自组件的属性名=&quot;父组件的数据&quot;</p><p>子组件：props</p><h1 id="八、项目实战-旅游网站城市列表页面开发" tabindex="-1"><a class="header-anchor" href="#八、项目实战-旅游网站城市列表页面开发" aria-hidden="true">#</a> 八、项目实战 - 旅游网站城市列表页面开发</h1></li><li><p>路由配置</p><p>添加城市路由，设置跳转路由 <code>&lt;router-link to=&quot;&quot;&gt;</code></p></li><li><p>搜索框布局</p><p>input</p></li><li><p>列表布局</p><p>list</p><p><code>css样式基本都是常用的那些，可以重点突破</code></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>display
position
line-height
width
height
float
padding
margin
border
flex
flex-direction
justify-content
overflow
rem px ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,9),x=n("p",null,"BetterScroll的使用和字母表布局",-1),w={href:"https://better-scroll.github.io/docs/zh-CN/guide/#betterscroll-%E6%98%AF%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"},j=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cnpm <span class="token function">install</span> better-scroll <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),q=n("li",null,[n("p",null,"页面的动态数据渲染"),n("p",null,"axios使用")],-1),V=n("li",null,[n("p",null,"兄弟组件数据传递"),n("p",null,"通过父组件")],-1),E=n("li",null,[n("p",null,"列表性能优化")],-1),M=n("li",null,[n("p",null,"搜索逻辑实现")],-1),B=n("p",null,"Vuex实现数据共享",-1),S={href:"https://vuex.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},P=n("li",null,[n("p",null,"Vuex的高级使用及localStorage"),n("p",null,"解决缓存："),n("pre",null,[n("code",null,`1. cookie
2. localStorage
`)])],-1),T=n("li",null,[n("p",null,"使用keep-alive优化网页性能"),n("p",null,[n("code",null,"<keep-alive></keep-alive>")])],-1),A=a(`<h1 id="九、项目实战-旅游网站详情页面开发" tabindex="-1"><a class="header-anchor" href="#九、项目实战-旅游网站详情页面开发" aria-hidden="true">#</a> 九、项目实战 - 旅游网站详情页面开发</h1><ol><li><p>动态路由和banner布局</p><p>颜色渐变</p></li><li><p>公用图片画廊组件拆分</p></li><li><p>实现header渐隐渐显效果</p></li><li><p>对全局事件的解绑</p></li><li><p>使用递归组件实现详情页列表</p><p><code>掌握递归组件的使用</code></p></li><li><p>动态获取详情页面数据</p></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token operator">&lt;</span>keep<span class="token operator">-</span>alive exclude<span class="token operator">=</span><span class="token string">&quot;Detail&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">/</span><span class="token operator">&gt;</span>
 <span class="token operator">&lt;</span><span class="token operator">/</span>keep<span class="token operator">-</span>alive<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>name的作用：</p><ul><li><p>递归</p></li><li><p>取消缓存</p></li><li><p>F12组件名字</p></li></ul><ol start="7"><li>在项目中加入基础动画</li></ol><h1 id="十、项目实战-项目的联调、测试与发布上线" tabindex="-1"><a class="header-anchor" href="#十、项目实战-项目的联调、测试与发布上线" aria-hidden="true">#</a> 十、项目实战-项目的联调、测试与发布上线</h1><ol><li><p>项目前后端联调</p><p>改config/index.js的代理</p></li><li><p>真机测试</p></li><li><p>打包上线</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>打包后的目录dist</p></li><li><p>异步组件实现按需加载</p><p>按需加载业务js</p><p>route/index.js</p><p>将局部组件转为异步组件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/pages/home/Home&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>课程总结与后续学习指南</p></li></ol><p>封装axios</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> MessageBox<span class="token punctuation">,</span> Message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-ui&#39;</span>
<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;@/store&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getToken <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/auth&#39;</span>

<span class="token comment">// create an axios instance</span>
<span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_API</span><span class="token punctuation">,</span> <span class="token comment">// url = base url + request url</span>
  <span class="token comment">// withCredentials: true, // send cookies when cross-domain requests</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">5000</span> <span class="token comment">// request timeout</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// request interceptor</span>
service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something before request is sent</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// let each request carry token</span>
      <span class="token comment">// [&#39;X-Token&#39;] is a custom headers key</span>
      <span class="token comment">// please modify it according to the actual situation</span>
      <span class="token comment">// config.headers[&#39;X-Token&#39;] = getToken()</span>
      config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> config
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something with request error</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token comment">// for debug</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token comment">// response interceptor</span>
service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token doc-comment comment">/**
   * If you want to get http information such as headers or status
   * Please return  response =&gt; response
  */</span>

  <span class="token doc-comment comment">/**
   * Determine the request status by custom code
   * Here is just an example
   * You can also judge the status by HTTP Status Code
   */</span>
  <span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> response<span class="token punctuation">.</span>data

    <span class="token comment">// if the custom code is not 20000, it is judged as an error.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> res<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">&#39;Error&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1000</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token comment">// 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">50008</span> <span class="token operator">||</span> res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">50012</span> <span class="token operator">||</span> res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">50014</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// to re-login</span>
        MessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;You have been logged out, you can cancel to stay on this page, or log in again&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Confirm logout&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">&#39;Re-Login&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">&#39;Cancel&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;user/resetToken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">&#39;Error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span> <span class="token operator">+</span> error<span class="token punctuation">)</span> <span class="token comment">// for debug</span>
    <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> error<span class="token punctuation">.</span>message<span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1000</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> service

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> MessageBox<span class="token punctuation">,</span> Message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-ui&#39;</span>
<span class="token keyword">import</span> cookie <span class="token keyword">from</span> <span class="token string">&quot;js-cookie&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>toKey<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;core-js/internals/reflect-metadata&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 创建axios实例</span>
<span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">15000</span> <span class="token comment">// 请求超时时间</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// http request 拦截器</span>
service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// token 先不处理，后续使用时在完善</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cookie<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cookie<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> config
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// http response 拦截器</span>
service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">208</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      loginEvent<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;loginDialogEvent&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1000</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> response<span class="token punctuation">.</span>data
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> service

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function C(I,D){const e=l("ExternalLinkIcon");return o(),i("div",null,[r,n("ol",null,[u,n("li",null,[d,n("ol",null,[k,n("li",null,[n("a",v,[s("README.md"),p(e)]),s(" 项目介绍")])])]),m]),b,n("ol",null,[g,n("li",null,[h,n("p",null,[s("插件awesome-swiper "),n("a",f,[s("https://github.com/surmon-china/vue-awesome-swiper"),p(e)])]),y]),_,n("li",null,[x,n("p",null,[n("a",w,[s("https://better-scroll.github.io/docs/zh-CN/guide/#betterscroll-是什么"),p(e)])]),j]),q,V,E,M,n("li",null,[B,n("p",null,[n("a",S,[s("https://vuex.vuejs.org/zh/"),p(e)])])]),P,T]),A])}const R=t(c,[["render",C],["__file","Vue2.5开发去哪儿网App从零基础入门到实战项目学习笔记.html.vue"]]);export{R as default};
