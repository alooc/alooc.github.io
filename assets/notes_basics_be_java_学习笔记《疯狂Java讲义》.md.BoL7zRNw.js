import{_ as e,c as t,o as p,ag as n}from"./chunks/framework.DPDPlp3K.js";const J=JSON.parse('{"title":"《疯狂Java讲义》学习笔记","description":"","frontmatter":{"title":"《疯狂Java讲义》学习笔记","date":"2020-01-01T09:02:55.000Z","categories":["编程语言","Java"],"tags":["Java"]},"headers":[],"relativePath":"notes/basics/be/java/学习笔记《疯狂Java讲义》.md","filePath":"notes/basics/be/java/学习笔记《疯狂Java讲义》.md"}'),_={name:"notes/basics/be/java/学习笔记《疯狂Java讲义》.md"};function o(s,a,r,i,c,v){return p(),t("div",null,a[0]||(a[0]=[n("<p>一、java语言概述 Java先编译后解释 JVM细节：指令集，寄存器，类文件的格式，栈，垃圾回收堆，存储区</p><p>二、理解面向对象 继承 封装 多态 任何简单或复杂的算法都可以由顺序结构、选择结构和循环结构这三种基本的结构组合生成 UML的使用 在Java语言中，除8个基本数据值之外，一切都是对象，而对象就是面向对象程序设计的中心</p><p>三、数据类型和运算符 直接量 算术运算符 复制运算符 比较运算符 逻辑运算符 位运算符 类型相关运算符</p><p>四、流程控制与数组 数组： int[] a=new int[n]; int[] a={}; a[i]; a.length; foreach循环(遍历数组和集合更加简洁)： for(type variableName:array|collection){ //variableName自动迭代访问每个元素 }</p><p>五、六、面向对象 初始化块是构造器的补充，总在其执行之前执行。 初始化块不能接收任何参数 基本用法： 如果有一段初始化处理代码对所有对象完全相同， 且无需接收任何参数，就可以把这段初始化处理代码提取 到初始化块中 静态初始化块也称为类初始化块 toString是一个“自我描述”的方法。返回该对象实现类的“类名+@+hashcode”值 内部类 匿名内部类 lambda表达式的作用就是代替匿名内部类的繁琐语法，用来创建只有一个抽象方法的接口（函数式接口）的实例。 枚举类</p><p>七、Java基础类库 熟练掌握</p><p>八、Java集合</p><p>九、泛型</p><p>十、异常处理</p><p>十一、十二、AWT Swing编程</p><p>十三、MYSQL数据库与JDBC编程 数据库连接池的解决方案： 当应用程序启动时，系统主动建立足够的数据库连接，并将这些连接组成一个连接池。 每次应用程序请求数据库连接时，无需重新打开连接，而是从连接池中取出已有的连接 使用，使用完后不再关闭数据库连接，而是直接将连接归还给连接池。通过使用连接池 ，将大大提高程序的运行效率。 C3P0数据源</p><p>十四、注解Annotation</p><p>​</p><p>​</p>",14)]))}const d=e(_,[["render",o]]);export{J as __pageData,d as default};
